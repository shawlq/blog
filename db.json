{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1485366514000},{"_id":"source/.DS_Store","hash":"73c5fb9f2cbf94e42469c33ebf5d0b21caa6b7e7","modified":1547141696000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1485366514000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1485366514000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1485366514000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1485366514000},{"_id":"themes/next/README.en.md","hash":"3b0c7998cf17f9cf9e1a5bfcd65679a43a00c817","modified":1485366514000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1485366514000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1485366514000},{"_id":"themes/next/_config.yml","hash":"2823c22e02dc69e2920c1a78c52cd5225fde182b","modified":1547567671000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1485366514000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1485366514000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1485366514000},{"_id":"source/_posts/.DS_Store","hash":"253ca5db94ede2c1604c7791661f66da7526dc72","modified":1547659204000},{"_id":"source/_posts/20111203-办公室养龟.md","hash":"01246216bfbbefa423bd11d0bd892ec5c0613cbd","modified":1547659537000},{"_id":"source/_posts/Balance-Router-Algorithm-in-High-Concurrency.md","hash":"9524a7a96767b16196cad2f86cd3cf46e4d6e6bc","modified":1547659603000},{"_id":"source/_posts/20120211-国外龟缸的简单设计.md","hash":"e68cadeaaefcef78a6c7799d02a55e3ce480b7fe","modified":1547659541000},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质.md","hash":"45aecc8cee5192c40b2f3da48d988408be4e29c0","modified":1547659550000},{"_id":"source/categories/index.md","hash":"49bf77b43403d1d4510ba6534be3cb30d0249ad5","modified":1486113760000},{"_id":"source/_posts/延迟清除队列与rotate.md","hash":"661b9a62e004d6a2e6683fb9155a9e5540ba1ce6","modified":1547659560000},{"_id":"source/tags/index.md","hash":"c1566aa7082ce7cf3d442867e9f95f9e04a041fb","modified":1486114099000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1485366514000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1485366514000},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1485366514000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1485366514000},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1485366514000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1485366514000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1485366514000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1485366514000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1485366514000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1485366514000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1485366514000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1485366514000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1485366514000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"f6c9fafa0f5f0050cd07ca2cf5e38fbae3e28145","modified":1485366514000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1485366514000},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1485366514000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1485366514000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1485366514000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1485366514000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1485366514000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1485366514000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1485366514000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1485366514000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1485366514000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1485366514000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1485366514000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1485366514000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485366514000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-1.jpg","hash":"516fb217a806e85cd2786ff45ceb408342143db3","modified":1486117000000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-2.jpg","hash":"27746ead22e5760285613592f89563830c8e15a8","modified":1486117016000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-3.jpg","hash":"84713e43fb86cae65102db5b2eb1a551bd2ca824","modified":1486117025000},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-1.jpg","hash":"0ee4303157bb798c80ebb549b912fdcb891669c8","modified":1486118379000},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-3.jpg","hash":"358af79fd716ea67e12281118de9889869295dd5","modified":1486118395000},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-5.jpg","hash":"407438e8573e569c835657d5bdbe4f72ecc42a99","modified":1486118409000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1485366514000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1485366514000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1485366514000},{"_id":"themes/next/layout/_macro/post.swig","hash":"e6016def9b512188f4c2725399c9adc7bc41cdae","modified":1485366514000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1485366514000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43d8830bb19da4fc7a5773866be19fa066b62645","modified":1485366514000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1485366514000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"78ccfc1dc915247c1fec3c86d742e0f4c2f6d99c","modified":1485366514000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1485366514000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"538c78e4dcc7f70fe7eefcbe4e83082860cb7f39","modified":1546964905000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1485366514000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1485366514000},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1485366514000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1485366514000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1485366514000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1485366514000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1485366514000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1485366514000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1485366514000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1485366514000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1485366514000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1485366514000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1485366514000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1485366514000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1485366514000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1485366514000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1485366514000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1485366514000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1485366514000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1485366514000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1485366514000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1485366514000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1485366514000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1485366514000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1485366514000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1485366514000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1485366514000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1485366514000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1485366514000},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-2.jpg","hash":"3207a8a2d139dd20cf67a06ee4b427d9adfe1c10","modified":1486118388000},{"_id":"source/_posts/Balance-Router-Algorithm-in-High-Concurrency/2boxes.png","hash":"b42e499a36903fd405e0a03aab58d4d8146a037b","modified":1547652041000},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-4.jpg","hash":"293e527f3ace4369232259ed1b2397c2a67b2088","modified":1486118402000},{"_id":"source/_posts/Balance-Router-Algorithm-in-High-Concurrency/standardmodel.png","hash":"907d167ff7df9f2f185b016533e6f46ef7001d78","modified":1547653198000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485366514000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485366514000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485366514000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485366514000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485366514000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485366514000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485366514000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-10.jpg","hash":"df920294fba1d7619ab3f8a98772d376d37fcee7","modified":1486117100000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-12.jpg","hash":"abea76e0f9f68210bbf068e9a980349491f783f7","modified":1486117116000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-13.jpg","hash":"24e1b8cbc026de882ca46a45e235ab5926ecf25c","modified":1486117127000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-9.jpg","hash":"23ea4250d3cdc938032c6f8c003076440f7167eb","modified":1486117088000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1485366514000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1485366514000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1485366514000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1485366514000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1485366514000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1485366514000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1485366514000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1485366514000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1485366514000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1485366514000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1485366514000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1485366514000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4abc01bc870e1d7a783cdbd26166edc782a6a4f4","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1485366514000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1485366514000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1485366514000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1485366514000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1485366514000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1485366514000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1485366514000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1485366514000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1485366514000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1485366514000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1485366514000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1485366514000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1485366514000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1485366514000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1485366514000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1485366514000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1485366514000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1485366514000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1485366514000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1485366514000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1485366514000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1485366514000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1485366514000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1485366514000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1485366514000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1485366514000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1485366514000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1485366514000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1485366514000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1485366514000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1485366514000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1485366514000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1485366514000},{"_id":"source/_posts/20111203-办公室养龟/20111203-4.jpg","hash":"e24ab345ebe7a4592cae2b66224636fe3365aa35","modified":1486115569000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-11.jpg","hash":"bbf09399b50c16ffd2cf5ab78f08722cad5e56cd","modified":1486117108000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-5.jpg","hash":"eb4991a13fc82a78e5d066193542887ddfe4f7e2","modified":1486117049000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-7.jpg","hash":"5ceb4ae993b0cdb2aa42efa319bf0fe11095fd63","modified":1486117066000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1485366514000},{"_id":"source/_posts/20111203-办公室养龟/20111203-3.jpg","hash":"ee4ab9f277fd54607110b911454b5376b89f74f0","modified":1486115553000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-4.jpg","hash":"8c19fb009558224ce824fd5e995c244f51a9fe20","modified":1486117034000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-6.jpg","hash":"102c82520ad28b0d25263a4f8d8789c9d8197a8b","modified":1486117058000},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-8.jpg","hash":"3944d05b41a36e20b132d160623b80c89b25e2ff","modified":1486117078000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1485366514000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"ea8078fa9e10be2bb042749d8b6a97adc38f914c","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1485366514000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1485366514000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1485366514000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1485366514000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1485366514000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1485366514000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1485366514000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1485366514000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1485366514000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1485366514000},{"_id":"source/_posts/20111203-办公室养龟/20111203-1.jpg","hash":"e7841b144d2b2dc02b4f432a8328e65d84a8e198","modified":1486115510000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1485366514000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1485366514000},{"_id":"source/_posts/20111203-办公室养龟/20111203-2.jpg","hash":"94c6edde9b5b97aabbb9540bcfc51c2fb2cb4917","modified":1486115541000},{"_id":"source/_posts/20111203-办公室养龟/20111203-5.jpg","hash":"41f355e4b47720e98225870fcbd22324a05e2786","modified":1486115580000},{"_id":"source/_posts/20111203-办公室养龟/20111203-6.jpg","hash":"a8166a845ee4c5175f255c206ead6fdd7a72baec","modified":1486115591000},{"_id":"source/_posts/20111203-办公室养龟/20111203-7.jpg","hash":"44fb24f81571688d56a4022f5384600c9682f825","modified":1486115602000},{"_id":"source/_posts/Balance-Router-Algorithm-in-High-Concurrency/boxer_router2.png","hash":"dd463e2fa764414249106927ba91f1d53123e508","modified":1547649485000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1485366514000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"fdfadbb4483043c7e0afd541ee9712389e633517","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1485366514000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1485366514000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1485366514000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1485366514000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1485366514000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1485366514000},{"_id":"public/search.xml","hash":"f013ae8d3a88cc15e1d735b67d31ef7b5315c6b2","modified":1547659625577},{"_id":"public/categories/index.html","hash":"b343c7ee72d1900fbb4e034df183f163f4a5843e","modified":1547659625719},{"_id":"public/tags/index.html","hash":"98d7a41dc5ef4639fa9ea987313f2c6014553411","modified":1547659625720},{"_id":"public/archives/2011/index.html","hash":"3a8c09c518d57ddbe9ea0a19008224ce785b496f","modified":1547659625720},{"_id":"public/archives/2011/12/index.html","hash":"0395827271d982981be0e1f8fd86ed3069d4f0ce","modified":1547659625723},{"_id":"public/archives/2012/index.html","hash":"738e9ffc4c7785c73bcf80326d376c5abc7da7bd","modified":1547659625723},{"_id":"public/archives/2012/02/index.html","hash":"34ce0f1d15ab56ee2d20ac98d1bf8eb6bb673592","modified":1547659625723},{"_id":"public/archives/2012/08/index.html","hash":"e2e6f106ecc18c8da910834ebdf4c206bd71a2c0","modified":1547659625723},{"_id":"public/archives/2019/index.html","hash":"ba5e2373b5c862186c74b37738540f1bc492fdd6","modified":1547659625723},{"_id":"public/archives/2019/01/index.html","hash":"925ae161dace56afa6f3175aae7e1bacfe26d825","modified":1547659625723},{"_id":"public/categories/水族/index.html","hash":"2ffd0dc4c9400c3490f0bb07e7a73e18c764c6d5","modified":1547659625723},{"_id":"public/categories/Distributed-Develop/index.html","hash":"c6c267172117258c253b76c15873680d43790925","modified":1547659625723},{"_id":"public/tags/龟龟/index.html","hash":"077e1b4c47359e498f3e029f897d3221ed75c35d","modified":1547659625724},{"_id":"public/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/index.html","hash":"1fc537ae4758ef26ca0f5a8bc763b140af24ca9e","modified":1547659625724},{"_id":"public/2019/01/08/延迟清除队列与rotate/index.html","hash":"e981f691bffc4737412c60008dcc6cf2edf18648","modified":1547659625724},{"_id":"public/2012/08/13/20120813-今天兴起测了测养龟的水质/index.html","hash":"8ff309ba8ea470190ddca48c2c90bc20c6d6066b","modified":1547659625724},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/index.html","hash":"cb4a5780b7a54a41fb472d9df17a56d705b74408","modified":1547659625724},{"_id":"public/2011/12/03/20111203-办公室养龟/index.html","hash":"9202a17d83033d5dd9606deb92a92359ec5f1b14","modified":1547659625724},{"_id":"public/archives/index.html","hash":"ea1340968e0c3800cd3d1c3a0a1fb0b6defba40f","modified":1547659625724},{"_id":"public/index.html","hash":"ed35619954e1c37a040f91ccfd045e26c7d56e94","modified":1547659625724},{"_id":"public/tags/造景/index.html","hash":"eb4eb2024a07dc748d0a37ec032b9721b9f56505","modified":1547659625748},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1547659625748},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1547659625749},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1547659625749},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1547659625749},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1547659625749},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1547659625749},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1547659625749},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1547659625749},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1547659625749},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547659625749},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547659625749},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1547659625749},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1547659625750},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1547659625750},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1547659625750},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1547659625750},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1547659625750},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1547659625750},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1547659625750},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1547659625750},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1547659625750},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1547659625750},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1547659625751},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1547659625751},{"_id":"public/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-1.jpg","hash":"0ee4303157bb798c80ebb549b912fdcb891669c8","modified":1547659625751},{"_id":"public/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-3.jpg","hash":"358af79fd716ea67e12281118de9889869295dd5","modified":1547659625751},{"_id":"public/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-5.jpg","hash":"407438e8573e569c835657d5bdbe4f72ecc42a99","modified":1547659625751},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-1.jpg","hash":"516fb217a806e85cd2786ff45ceb408342143db3","modified":1547659625751},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-2.jpg","hash":"27746ead22e5760285613592f89563830c8e15a8","modified":1547659625751},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-3.jpg","hash":"84713e43fb86cae65102db5b2eb1a551bd2ca824","modified":1547659625751},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1547659626788},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1547659626801},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1547659626806},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1547659626806},{"_id":"public/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/2boxes.png","hash":"b42e499a36903fd405e0a03aab58d4d8146a037b","modified":1547659626806},{"_id":"public/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/standardmodel.png","hash":"907d167ff7df9f2f185b016533e6f46ef7001d78","modified":1547659626806},{"_id":"public/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-2.jpg","hash":"3207a8a2d139dd20cf67a06ee4b427d9adfe1c10","modified":1547659626806},{"_id":"public/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-4.jpg","hash":"293e527f3ace4369232259ed1b2397c2a67b2088","modified":1547659626806},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1547659626817},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1547659626817},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1547659626817},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1547659626817},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1547659626817},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1547659626818},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1547659626818},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1547659626818},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1547659626818},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1547659626818},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1547659626818},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1547659626818},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1547659626818},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1547659626818},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1547659626819},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1547659626819},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1547659626819},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1547659626819},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1547659626819},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1547659626819},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1547659626819},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1547659626819},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1547659626820},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1547659626820},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1547659626820},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1547659626820},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1547659626820},{"_id":"public/lib/fastclick/README.html","hash":"d6e90449a2c09f3033f7e43d68b0cc8208e22e09","modified":1547659626820},{"_id":"public/lib/jquery_lazyload/README.html","hash":"a08fccd381c8fdb70ba8974b208254c5ba23a95f","modified":1547659626820},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"06811ca2f722dead021493457f27cdc264ef928d","modified":1547659626820},{"_id":"public/css/main.css","hash":"feecf2eac39fc3c6d4b53d6373838c17a496f533","modified":1547659626820},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1547659626820},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1547659626820},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1547659626820},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1547659626820},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1547659626820},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1547659626820},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1547659626820},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1547659626820},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1547659626822},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1547659626822},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1547659626822},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-10.jpg","hash":"df920294fba1d7619ab3f8a98772d376d37fcee7","modified":1547659626822},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-12.jpg","hash":"abea76e0f9f68210bbf068e9a980349491f783f7","modified":1547659626822},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-13.jpg","hash":"24e1b8cbc026de882ca46a45e235ab5926ecf25c","modified":1547659626822},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-9.jpg","hash":"23ea4250d3cdc938032c6f8c003076440f7167eb","modified":1547659626823},{"_id":"public/2011/12/03/20111203-办公室养龟/20111203-4.jpg","hash":"e24ab345ebe7a4592cae2b66224636fe3365aa35","modified":1547659626831},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-11.jpg","hash":"bbf09399b50c16ffd2cf5ab78f08722cad5e56cd","modified":1547659626831},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-5.jpg","hash":"eb4991a13fc82a78e5d066193542887ddfe4f7e2","modified":1547659626831},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-7.jpg","hash":"5ceb4ae993b0cdb2aa42efa319bf0fe11095fd63","modified":1547659626831},{"_id":"public/2011/12/03/20111203-办公室养龟/20111203-3.jpg","hash":"ee4ab9f277fd54607110b911454b5376b89f74f0","modified":1547659626841},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-4.jpg","hash":"8c19fb009558224ce824fd5e995c244f51a9fe20","modified":1547659626841},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-6.jpg","hash":"102c82520ad28b0d25263a4f8d8789c9d8197a8b","modified":1547659626842},{"_id":"public/2012/02/11/20120211-国外龟缸的简单设计/20120211-8.jpg","hash":"3944d05b41a36e20b132d160623b80c89b25e2ff","modified":1547659626842},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1547659626847},{"_id":"public/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/boxer_router2.png","hash":"dd463e2fa764414249106927ba91f1d53123e508","modified":1547659626847},{"_id":"public/2011/12/03/20111203-办公室养龟/20111203-1.jpg","hash":"e7841b144d2b2dc02b4f432a8328e65d84a8e198","modified":1547659626848},{"_id":"public/2011/12/03/20111203-办公室养龟/20111203-2.jpg","hash":"94c6edde9b5b97aabbb9540bcfc51c2fb2cb4917","modified":1547659626848},{"_id":"public/2011/12/03/20111203-办公室养龟/20111203-5.jpg","hash":"41f355e4b47720e98225870fcbd22324a05e2786","modified":1547659626849},{"_id":"public/2011/12/03/20111203-办公室养龟/20111203-6.jpg","hash":"a8166a845ee4c5175f255c206ead6fdd7a72baec","modified":1547659626849},{"_id":"public/2011/12/03/20111203-办公室养龟/20111203-7.jpg","hash":"44fb24f81571688d56a4022f5384600c9682f825","modified":1547659626850}],"Category":[{"name":"水族","_id":"cjqzgkwbf0004nnwv93a29m3i"},{"name":"Distributed Develop","_id":"cjqzgkwc00009nnwv2sryqn1p"}],"Data":[],"Page":[{"title":"几种类别","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 几种类别\n#date: 2017-02-03 17:18:22\ntype: categories\ncomments: false\n---\n","date":"2017-02-03T09:22:40.000Z","updated":"2017-02-03T09:22:40.000Z","path":"categories/index.html","layout":"page","_id":"cjqzgkwb60001nnwvzgqh783u","content":"","excerpt":"","more":""},{"title":"tags","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\n#date: 2017-02-03 17:27:33\ntype: tags\n---\n","date":"2017-02-03T09:28:19.000Z","updated":"2017-02-03T09:28:19.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjqzgkwbc0003nnwv62fcpds9","content":"","excerpt":"","more":""}],"Post":[{"title":"办公室养龟","date":"2011-12-03T12:01:53.000Z","_content":"\n宿舍实在寒冷，小小的感冒反反复复。太心疼了，不忍心让它这么带病冬眠了。\n只能把小小和大大带到办公室里，让它们一起陪着我白天做研究。\n正好我的位置也是靠窗，晒太阳方便，。\n这个小水缸、加热棒和浮台都是在淘宝上新买的。总不能吧宿舍里的大行李箱搬到办公桌上吧。\n过滤是CY-20；加热棒是阿诺比的26度精控；浮台你懂得；水缸是阿诺比的E-340；这套装备在龟龟们现在这个年龄段，应该还能凑活过个冬天。\n照片是 HTC的 G10 自带摄像头，为这个冬天留下一个瞬间，咔，咔，咔。\n\n![](20111203-1.jpg)\n\n<!--more--> \n\n![](20111203-2.jpg)\n![](20111203-3.jpg)\n![](20111203-4.jpg)\n![](20111203-5.jpg)\n![](20111203-6.jpg)\n![](20111203-7.jpg)\n","source":"_posts/20111203-办公室养龟.md","raw":"---\ntitle: 办公室养龟\ndate: 2011-12-03 20:01:53\ncategories: 水族\ntags: 龟龟\n---\n\n宿舍实在寒冷，小小的感冒反反复复。太心疼了，不忍心让它这么带病冬眠了。\n只能把小小和大大带到办公室里，让它们一起陪着我白天做研究。\n正好我的位置也是靠窗，晒太阳方便，。\n这个小水缸、加热棒和浮台都是在淘宝上新买的。总不能吧宿舍里的大行李箱搬到办公桌上吧。\n过滤是CY-20；加热棒是阿诺比的26度精控；浮台你懂得；水缸是阿诺比的E-340；这套装备在龟龟们现在这个年龄段，应该还能凑活过个冬天。\n照片是 HTC的 G10 自带摄像头，为这个冬天留下一个瞬间，咔，咔，咔。\n\n![](20111203-1.jpg)\n\n<!--more--> \n\n![](20111203-2.jpg)\n![](20111203-3.jpg)\n![](20111203-4.jpg)\n![](20111203-5.jpg)\n![](20111203-6.jpg)\n![](20111203-7.jpg)\n","slug":"20111203-办公室养龟","published":1,"updated":"2019-01-16T17:25:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqzgkwb00000nnwvdvgbb9gp","content":"<p>宿舍实在寒冷，小小的感冒反反复复。太心疼了，不忍心让它这么带病冬眠了。<br>只能把小小和大大带到办公室里，让它们一起陪着我白天做研究。<br>正好我的位置也是靠窗，晒太阳方便，。<br>这个小水缸、加热棒和浮台都是在淘宝上新买的。总不能吧宿舍里的大行李箱搬到办公桌上吧。<br>过滤是CY-20；加热棒是阿诺比的26度精控；浮台你懂得；水缸是阿诺比的E-340；这套装备在龟龟们现在这个年龄段，应该还能凑活过个冬天。<br>照片是 HTC的 G10 自带摄像头，为这个冬天留下一个瞬间，咔，咔，咔。</p>\n<p><img src=\"/2011/12/03/20111203-办公室养龟/20111203-1.jpg\" alt=\"\"></p>\n<a id=\"more\"></a> \n<p><img src=\"/2011/12/03/20111203-办公室养龟/20111203-2.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-3.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-4.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-5.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-6.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-7.jpg\" alt=\"\"></p>\n","excerpt":"<p>宿舍实在寒冷，小小的感冒反反复复。太心疼了，不忍心让它这么带病冬眠了。<br>只能把小小和大大带到办公室里，让它们一起陪着我白天做研究。<br>正好我的位置也是靠窗，晒太阳方便，。<br>这个小水缸、加热棒和浮台都是在淘宝上新买的。总不能吧宿舍里的大行李箱搬到办公桌上吧。<br>过滤是CY-20；加热棒是阿诺比的26度精控；浮台你懂得；水缸是阿诺比的E-340；这套装备在龟龟们现在这个年龄段，应该还能凑活过个冬天。<br>照片是 HTC的 G10 自带摄像头，为这个冬天留下一个瞬间，咔，咔，咔。</p>\n<p><img src=\"/2011/12/03/20111203-办公室养龟/20111203-1.jpg\" alt=\"\"></p>","more":"<p><img src=\"/2011/12/03/20111203-办公室养龟/20111203-2.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-3.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-4.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-5.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-6.jpg\" alt=\"\"><br><img src=\"/2011/12/03/20111203-办公室养龟/20111203-7.jpg\" alt=\"\"></p>"},{"title":"Balance Router Algorithm in High Concurrency","date":"2019-01-13T17:20:31.000Z","mathjax":true,"_content":"\n# 背景\n\n最近有个需求涉及到分布式高并发获取资源的场景，简单的来说就是有个包含许多存储块的资源池，多个（并发的）任务处理的agent需要找到可用存储块并向其存储数据。\n\n按以往实践的经验，可以借助**zookeeper全局锁**的强一致性实现，大致思路如下：\n\n1. zk上保存所有存储块的可用容量信息；\n2. 每个（独立并发的）agent获取zookeeper上所有存储块的信息，找出最优（比如可用空间最大）的存储块，然后向其存储业务数据，占用其一定的存储空间，（即把扣除后的可用空间写回到zookeeper上）；\n3. 因为zookeeper的强一致性，确保了多个agent同时写入也只有1个会写成功，其它会失败；\n4. 那么其它的agent只能重新获取zookeeper上的数据，再进入第2步去计算；\n\n上述的方案在大多数场景都是“适用”的。但是在高并发度诉求的场景下，全局锁的存在会严重影响并发度的性能。因为当1个agent写入最新值的时候，原本**最优的**的存储块，可能已经变成非最优，而其它agent只能废弃它们已经选择的“最优”结果，重新向zookeeper获取存储块信息并再次计算。\n\n```mermaid\nsequenceDiagram\nparticipant Agent_1\nparticipant zookeeper\nparticipant Agent_2\nparticipant Agent_3\n\nzookeeper->>+Agent_1: get chunk list (version_0)\nzookeeper->>+Agent_2: get same chunk list (version_0)\nzookeeper->>+Agent_3: get chunk list (version_0)\nAgent_1->>-zookeeper: set chunk_i as used (version_1)\nAgent_2-->>-zookeeper: set FAIL, version changed\nNote over Agent_2,zookeeper: because of Agent_1 is set.\nzookeeper->>+Agent_2: get new chunk list (version_1)\nAgent_2->>-zookeeper: set chunk_j as used (version_2)\nAgent_3-->>-zookeeper: wait for Agent_2 set successfully.\n```\n\n上图中的version是zookeeper中保证get/set一致性的属性。然而这一过程的影响在高并发度的时候是无法忽略的：当Agent_1获取到最优，并写入zookeeper后，剩下的n-1个agent都因为一致性而重新向zookeeper获取并计算。等Agent_2写入zookeeper后，剩下的n-2又要重新获取。简单地类推这个过程，可以得到影响为（n-1）的阶乘（**这个结果并不严谨，因为Agent_1可能已经完成手上的任务并重新参与这个过程**）：\n$$\nInfection = (n-1)!\n$$\n\n# 假设\n\n出于维持高并发度的考虑，必然需要我们放下强一致性的全局锁方案。可以设想一下，每个（高并发的）agent在路由（选择）可用存储块的时候完全不关联，而是各自独立从zookeeper上获取到存储块信息后，通过1个路由算法$\\Phi$的计算，就能得到最优存储块。\n\n这样，对于我们来说，关键问题就是如何找到这个算法$\\phi$。\n\n* 性质1：显然这个$\\Phi$应该是概率性质的。因为如果$\\Phi$的计算是固定，比如只选择可用容量最大的存储块，那么在某一瞬间，所有正在路由的agent都会找到相同的存储块，结果就是该存储块因为大量向其存储数据而负载溢出（空间冲爆了）;\n* 性质2：$\\Phi$应该是当前agent的并发度$\\eta$的函数，否则无法稀释概率，导致多个agent选择相同存储块，最终负载溢出;\n* 性质3：$\\Phi$虽然是概率性质的，但是空间越大的存储块应该有越高的概率被选择;\n\n第1点是算法$\\Phi$的数学性质，第2点是防止溢出的客观约束，第3点是倾向均衡的人为预期。这3点共同保证了：即使初始状态各个存储块的可用空间不一致（例如有些快用尽，而有些新扩容出来），但是随着时间的推移（各高并发agent不断路由并消耗），所有存储块的可用空间应当趋于一致，即达到存储的负载均衡。\n\n**综上所述，这里给出1个均衡路由的设计模型。**\n\n# 均衡路由模型\n\n概率泛函中$\\Phi(n(i), \\eta, M)$，$n(i)$为第i个存储块的可用空间，$\\eta$为agent的并发度，$M$是每次路由占用的空间。\n\n注意：这里的$n(i)$和$M$都是无量纲的归一化值，因为空间只能整块使用，比如存储块1的可用空间有110GB，但是每次任务需要占用30GB，那么$n(1) = 3$，而$M = 1$。\n\n在后续的模型中，我们假定每次需要消耗的空间$M$不变，默认$M = 1$，而$n(i)$必然是$M$的正整数倍，由此重新得到$\\Phi(n(i), \\eta)$。\n\n同时，增加性质2的稀释约束条件：$\\Phi(n(i), \\eta) \\times \\eta \\leq n(i)$，避免负载溢出。\n\n出于理解方便，这里把路由计算抽象成把小球存放到柜子里的动作：所有柜子都已按可用空间由大及小排序;\n\n## 双柜模型\n\n首先，简单地介绍下算法，这里先假设有只有2个球柜，最左边的红色小球代表的是agent的并发度$\\eta$，图中的渐变色小球表示有50%的概率被选择。\n![图1：双柜模型](2boxes.png)\n\n由此，可以得到第1个柜子被选中的概率为: $\\Phi(i=0,\\eta,\\delta)=\\dfrac{1}{2} + \\dfrac{\\delta}{2(\\eta)}$；\n而第2个柜子被选中的概率为: $\\Phi(i=1,\\eta,\\delta)=\\dfrac{1}{2} - \\dfrac{\\delta}{2(\\eta)}$；\n这里，$\\delta$是第1个柜子比第2个多出来的空格数，此示例中$\\delta$，$\\delta \\in N^+$，引入$\\delta$的目的就是为了满足性质3;\n\n可以看出，当并发度$\\eta \\leq \\delta$时，选择第2个柜子的概率为0(**因为概率不能小于0**)。第1个规格被选择的概率则是$100%$。\n当并发度$\\eta \\geq \\delta$时，优先填充第1个柜子多出来的2个空格，剩余小球才会随机均分到2个柜子中。\n这也是因为算法的性质3，在第1个规格可用较多的时候会倾向于优选1，从而保障2个柜子的整体可用空间在选择后趋向均衡。\n\n\n## 标准模型\n相比双柜模型，实际应用的场景会略微复杂一点。可以放球的柜子不但有多个，而且柜子的可用空间还可能会相等。如图给出7个柜子，可用空间分别为（7，6，6，5，3，3，2）。需要放置15个小球，即并发度$\\eta=15$：\n![图2：标准模型](standardmodel.png)\n\n标准模型仍然要满足$\\Phi$的第3点性质（趋向均衡）：\n* 小球趋向于优先填充（occupied）可用空间最多的柜子，一直达到均衡线（Balance）；\n* 剩余的小球（Rest requires）只能在Balance上一层可选位置（Rest Available）中随机选择；\n\n因此，可以得到\n$$\n\\Phi=\\dfrac{\\Delta_{i}+P}{O+NP}\n$$\n\n其中，\n* $\\Delta_{i}$表示第i个柜子在Balance线以下的空间数量；\n* $P$表示剩余小球在水位上面选择第i个柜子的朴素概率；\n* $O$表示Balance线以下所有occupied的柜子空间；\n* $N$表示可被选择的柜子数量，不是所有的柜子都会被选择，远高于Balance的柜子是不考虑的。\n\n分析到这里，没有什么比立即给出算法的伪代码更简单明了的了。\n```python\n    FUNCTION router() -> probability\n        var require = concurrency # 把并发度定义为需要放置小球的数量\n        var balance = occupied = avail = rest_avail = rest_require = box_num = 0\n        for box in Boxes\n            CALCULATE box.diff_vs_next # 比右邻box多的格子数\n            box_num += 1\n            if box.diff_vs_next == 0\n                # 表示相邻2个box的可用格子数相同\n                continue\n\n            avail += box_num * box.diff_vs_next\n            if avail > require\n                break # 截断，远高于Balance线的不再考虑\n            \n            balance = box.capacity\n\n        for box in Boxes\n            if box.capacity <= balance\n                break\n            box.diff_vs_balance = box.capacity - balance\n            occupied += box.diff_vs_balance\n\n        rest_require = require - occupied\n        rest_avail   = avail   - occupied\n\n        var r = random()\n        P = round(rest_require/rest_avail, 6)\n        for box in Boxes\n            Phi = round((box.diff_vs_balance + P)/(occupied + box_num * P), 6)\n            if r <= Phi\n                RETURN box\n            r -= Phi\n\n        RETURN NONE\n```\n\n# 原型验证\n\n验证模型：\n* 随机初始化50个存储块，各自的初始可用空间差异较大，有的超过1000GB，而有的初始就只有300多GB；\n* 设置25个agent，各自并发执行route，每次route到可用存储块便会消耗其50GB空间；\n* 每个agent都会循环40次，每次之间sleep间隔100～500ms的随机值（模拟agent之间无序、无关联态）。\n\n![图3：原型模型](boxer_router2.png)\n\n可以看到：\n* 那些初始容量较多的存储块优先被选择，可用容量随时间逐步减少；\n* 而初始容量就少的存储块，因为不容易被选择，所以初始减幅很小；\n* 随着所有存储块的平均可用空间不断下降，原本不容易被选择的存储块被选到的概率增加，继而可用空间开始减少。\n* 最终在不断的消耗下，所有存储块的可用容量都会趋于均衡。\n\n**这就是均衡路由算法。**\n\n\n","source":"_posts/Balance-Router-Algorithm-in-High-Concurrency.md","raw":"---\ntitle: Balance Router Algorithm in High Concurrency\ndate: 2019-01-14 01:20:31\ncategories: Distributed Develop\ntags:\nmathjax: true\n---\n\n# 背景\n\n最近有个需求涉及到分布式高并发获取资源的场景，简单的来说就是有个包含许多存储块的资源池，多个（并发的）任务处理的agent需要找到可用存储块并向其存储数据。\n\n按以往实践的经验，可以借助**zookeeper全局锁**的强一致性实现，大致思路如下：\n\n1. zk上保存所有存储块的可用容量信息；\n2. 每个（独立并发的）agent获取zookeeper上所有存储块的信息，找出最优（比如可用空间最大）的存储块，然后向其存储业务数据，占用其一定的存储空间，（即把扣除后的可用空间写回到zookeeper上）；\n3. 因为zookeeper的强一致性，确保了多个agent同时写入也只有1个会写成功，其它会失败；\n4. 那么其它的agent只能重新获取zookeeper上的数据，再进入第2步去计算；\n\n上述的方案在大多数场景都是“适用”的。但是在高并发度诉求的场景下，全局锁的存在会严重影响并发度的性能。因为当1个agent写入最新值的时候，原本**最优的**的存储块，可能已经变成非最优，而其它agent只能废弃它们已经选择的“最优”结果，重新向zookeeper获取存储块信息并再次计算。\n\n```mermaid\nsequenceDiagram\nparticipant Agent_1\nparticipant zookeeper\nparticipant Agent_2\nparticipant Agent_3\n\nzookeeper->>+Agent_1: get chunk list (version_0)\nzookeeper->>+Agent_2: get same chunk list (version_0)\nzookeeper->>+Agent_3: get chunk list (version_0)\nAgent_1->>-zookeeper: set chunk_i as used (version_1)\nAgent_2-->>-zookeeper: set FAIL, version changed\nNote over Agent_2,zookeeper: because of Agent_1 is set.\nzookeeper->>+Agent_2: get new chunk list (version_1)\nAgent_2->>-zookeeper: set chunk_j as used (version_2)\nAgent_3-->>-zookeeper: wait for Agent_2 set successfully.\n```\n\n上图中的version是zookeeper中保证get/set一致性的属性。然而这一过程的影响在高并发度的时候是无法忽略的：当Agent_1获取到最优，并写入zookeeper后，剩下的n-1个agent都因为一致性而重新向zookeeper获取并计算。等Agent_2写入zookeeper后，剩下的n-2又要重新获取。简单地类推这个过程，可以得到影响为（n-1）的阶乘（**这个结果并不严谨，因为Agent_1可能已经完成手上的任务并重新参与这个过程**）：\n$$\nInfection = (n-1)!\n$$\n\n# 假设\n\n出于维持高并发度的考虑，必然需要我们放下强一致性的全局锁方案。可以设想一下，每个（高并发的）agent在路由（选择）可用存储块的时候完全不关联，而是各自独立从zookeeper上获取到存储块信息后，通过1个路由算法$\\Phi$的计算，就能得到最优存储块。\n\n这样，对于我们来说，关键问题就是如何找到这个算法$\\phi$。\n\n* 性质1：显然这个$\\Phi$应该是概率性质的。因为如果$\\Phi$的计算是固定，比如只选择可用容量最大的存储块，那么在某一瞬间，所有正在路由的agent都会找到相同的存储块，结果就是该存储块因为大量向其存储数据而负载溢出（空间冲爆了）;\n* 性质2：$\\Phi$应该是当前agent的并发度$\\eta$的函数，否则无法稀释概率，导致多个agent选择相同存储块，最终负载溢出;\n* 性质3：$\\Phi$虽然是概率性质的，但是空间越大的存储块应该有越高的概率被选择;\n\n第1点是算法$\\Phi$的数学性质，第2点是防止溢出的客观约束，第3点是倾向均衡的人为预期。这3点共同保证了：即使初始状态各个存储块的可用空间不一致（例如有些快用尽，而有些新扩容出来），但是随着时间的推移（各高并发agent不断路由并消耗），所有存储块的可用空间应当趋于一致，即达到存储的负载均衡。\n\n**综上所述，这里给出1个均衡路由的设计模型。**\n\n# 均衡路由模型\n\n概率泛函中$\\Phi(n(i), \\eta, M)$，$n(i)$为第i个存储块的可用空间，$\\eta$为agent的并发度，$M$是每次路由占用的空间。\n\n注意：这里的$n(i)$和$M$都是无量纲的归一化值，因为空间只能整块使用，比如存储块1的可用空间有110GB，但是每次任务需要占用30GB，那么$n(1) = 3$，而$M = 1$。\n\n在后续的模型中，我们假定每次需要消耗的空间$M$不变，默认$M = 1$，而$n(i)$必然是$M$的正整数倍，由此重新得到$\\Phi(n(i), \\eta)$。\n\n同时，增加性质2的稀释约束条件：$\\Phi(n(i), \\eta) \\times \\eta \\leq n(i)$，避免负载溢出。\n\n出于理解方便，这里把路由计算抽象成把小球存放到柜子里的动作：所有柜子都已按可用空间由大及小排序;\n\n## 双柜模型\n\n首先，简单地介绍下算法，这里先假设有只有2个球柜，最左边的红色小球代表的是agent的并发度$\\eta$，图中的渐变色小球表示有50%的概率被选择。\n![图1：双柜模型](2boxes.png)\n\n由此，可以得到第1个柜子被选中的概率为: $\\Phi(i=0,\\eta,\\delta)=\\dfrac{1}{2} + \\dfrac{\\delta}{2(\\eta)}$；\n而第2个柜子被选中的概率为: $\\Phi(i=1,\\eta,\\delta)=\\dfrac{1}{2} - \\dfrac{\\delta}{2(\\eta)}$；\n这里，$\\delta$是第1个柜子比第2个多出来的空格数，此示例中$\\delta$，$\\delta \\in N^+$，引入$\\delta$的目的就是为了满足性质3;\n\n可以看出，当并发度$\\eta \\leq \\delta$时，选择第2个柜子的概率为0(**因为概率不能小于0**)。第1个规格被选择的概率则是$100%$。\n当并发度$\\eta \\geq \\delta$时，优先填充第1个柜子多出来的2个空格，剩余小球才会随机均分到2个柜子中。\n这也是因为算法的性质3，在第1个规格可用较多的时候会倾向于优选1，从而保障2个柜子的整体可用空间在选择后趋向均衡。\n\n\n## 标准模型\n相比双柜模型，实际应用的场景会略微复杂一点。可以放球的柜子不但有多个，而且柜子的可用空间还可能会相等。如图给出7个柜子，可用空间分别为（7，6，6，5，3，3，2）。需要放置15个小球，即并发度$\\eta=15$：\n![图2：标准模型](standardmodel.png)\n\n标准模型仍然要满足$\\Phi$的第3点性质（趋向均衡）：\n* 小球趋向于优先填充（occupied）可用空间最多的柜子，一直达到均衡线（Balance）；\n* 剩余的小球（Rest requires）只能在Balance上一层可选位置（Rest Available）中随机选择；\n\n因此，可以得到\n$$\n\\Phi=\\dfrac{\\Delta_{i}+P}{O+NP}\n$$\n\n其中，\n* $\\Delta_{i}$表示第i个柜子在Balance线以下的空间数量；\n* $P$表示剩余小球在水位上面选择第i个柜子的朴素概率；\n* $O$表示Balance线以下所有occupied的柜子空间；\n* $N$表示可被选择的柜子数量，不是所有的柜子都会被选择，远高于Balance的柜子是不考虑的。\n\n分析到这里，没有什么比立即给出算法的伪代码更简单明了的了。\n```python\n    FUNCTION router() -> probability\n        var require = concurrency # 把并发度定义为需要放置小球的数量\n        var balance = occupied = avail = rest_avail = rest_require = box_num = 0\n        for box in Boxes\n            CALCULATE box.diff_vs_next # 比右邻box多的格子数\n            box_num += 1\n            if box.diff_vs_next == 0\n                # 表示相邻2个box的可用格子数相同\n                continue\n\n            avail += box_num * box.diff_vs_next\n            if avail > require\n                break # 截断，远高于Balance线的不再考虑\n            \n            balance = box.capacity\n\n        for box in Boxes\n            if box.capacity <= balance\n                break\n            box.diff_vs_balance = box.capacity - balance\n            occupied += box.diff_vs_balance\n\n        rest_require = require - occupied\n        rest_avail   = avail   - occupied\n\n        var r = random()\n        P = round(rest_require/rest_avail, 6)\n        for box in Boxes\n            Phi = round((box.diff_vs_balance + P)/(occupied + box_num * P), 6)\n            if r <= Phi\n                RETURN box\n            r -= Phi\n\n        RETURN NONE\n```\n\n# 原型验证\n\n验证模型：\n* 随机初始化50个存储块，各自的初始可用空间差异较大，有的超过1000GB，而有的初始就只有300多GB；\n* 设置25个agent，各自并发执行route，每次route到可用存储块便会消耗其50GB空间；\n* 每个agent都会循环40次，每次之间sleep间隔100～500ms的随机值（模拟agent之间无序、无关联态）。\n\n![图3：原型模型](boxer_router2.png)\n\n可以看到：\n* 那些初始容量较多的存储块优先被选择，可用容量随时间逐步减少；\n* 而初始容量就少的存储块，因为不容易被选择，所以初始减幅很小；\n* 随着所有存储块的平均可用空间不断下降，原本不容易被选择的存储块被选到的概率增加，继而可用空间开始减少。\n* 最终在不断的消耗下，所有存储块的可用容量都会趋于均衡。\n\n**这就是均衡路由算法。**\n\n\n","slug":"Balance-Router-Algorithm-in-High-Concurrency","published":1,"updated":"2019-01-16T17:26:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqzgkwb80002nnwvjik02u4t","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>最近有个需求涉及到分布式高并发获取资源的场景，简单的来说就是有个包含许多存储块的资源池，多个（并发的）任务处理的agent需要找到可用存储块并向其存储数据。</p>\n<p>按以往实践的经验，可以借助<strong>zookeeper全局锁</strong>的强一致性实现，大致思路如下：</p>\n<ol>\n<li>zk上保存所有存储块的可用容量信息；</li>\n<li>每个（独立并发的）agent获取zookeeper上所有存储块的信息，找出最优（比如可用空间最大）的存储块，然后向其存储业务数据，占用其一定的存储空间，（即把扣除后的可用空间写回到zookeeper上）；</li>\n<li>因为zookeeper的强一致性，确保了多个agent同时写入也只有1个会写成功，其它会失败；</li>\n<li>那么其它的agent只能重新获取zookeeper上的数据，再进入第2步去计算；</li>\n</ol>\n<p>上述的方案在大多数场景都是“适用”的。但是在高并发度诉求的场景下，全局锁的存在会严重影响并发度的性能。因为当1个agent写入最新值的时候，原本<strong>最优的</strong>的存储块，可能已经变成非最优，而其它agent只能废弃它们已经选择的“最优”结果，重新向zookeeper获取存储块信息并再次计算。</p>\n<pre class=\"mermaid\">sequenceDiagram\nparticipant Agent_1\nparticipant zookeeper\nparticipant Agent_2\nparticipant Agent_3\n\nzookeeper->>+Agent_1: get chunk list (version_0)\nzookeeper->>+Agent_2: get same chunk list (version_0)\nzookeeper->>+Agent_3: get chunk list (version_0)\nAgent_1->>-zookeeper: set chunk_i as used (version_1)\nAgent_2-->>-zookeeper: set FAIL, version changed\nNote over Agent_2,zookeeper: because of Agent_1 is set.\nzookeeper->>+Agent_2: get new chunk list (version_1)\nAgent_2->>-zookeeper: set chunk_j as used (version_2)\nAgent_3-->>-zookeeper: wait for Agent_2 set successfully.</pre>\n\n<p>上图中的version是zookeeper中保证get/set一致性的属性。然而这一过程的影响在高并发度的时候是无法忽略的：当Agent_1获取到最优，并写入zookeeper后，剩下的n-1个agent都因为一致性而重新向zookeeper获取并计算。等Agent_2写入zookeeper后，剩下的n-2又要重新获取。简单地类推这个过程，可以得到影响为（n-1）的阶乘（<strong>这个结果并不严谨，因为Agent_1可能已经完成手上的任务并重新参与这个过程</strong>）：</p>\n<script type=\"math/tex; mode=display\">\nInfection = (n-1)!</script><h1 id=\"假设\"><a href=\"#假设\" class=\"headerlink\" title=\"假设\"></a>假设</h1><p>出于维持高并发度的考虑，必然需要我们放下强一致性的全局锁方案。可以设想一下，每个（高并发的）agent在路由（选择）可用存储块的时候完全不关联，而是各自独立从zookeeper上获取到存储块信息后，通过1个路由算法$\\Phi$的计算，就能得到最优存储块。</p>\n<p>这样，对于我们来说，关键问题就是如何找到这个算法$\\phi$。</p>\n<ul>\n<li>性质1：显然这个$\\Phi$应该是概率性质的。因为如果$\\Phi$的计算是固定，比如只选择可用容量最大的存储块，那么在某一瞬间，所有正在路由的agent都会找到相同的存储块，结果就是该存储块因为大量向其存储数据而负载溢出（空间冲爆了）;</li>\n<li>性质2：$\\Phi$应该是当前agent的并发度$\\eta$的函数，否则无法稀释概率，导致多个agent选择相同存储块，最终负载溢出;</li>\n<li>性质3：$\\Phi$虽然是概率性质的，但是空间越大的存储块应该有越高的概率被选择;</li>\n</ul>\n<p>第1点是算法$\\Phi$的数学性质，第2点是防止溢出的客观约束，第3点是倾向均衡的人为预期。这3点共同保证了：即使初始状态各个存储块的可用空间不一致（例如有些快用尽，而有些新扩容出来），但是随着时间的推移（各高并发agent不断路由并消耗），所有存储块的可用空间应当趋于一致，即达到存储的负载均衡。</p>\n<p><strong>综上所述，这里给出1个均衡路由的设计模型。</strong></p>\n<h1 id=\"均衡路由模型\"><a href=\"#均衡路由模型\" class=\"headerlink\" title=\"均衡路由模型\"></a>均衡路由模型</h1><p>概率泛函中$\\Phi(n(i), \\eta, M)$，$n(i)$为第i个存储块的可用空间，$\\eta$为agent的并发度，$M$是每次路由占用的空间。</p>\n<p>注意：这里的$n(i)$和$M$都是无量纲的归一化值，因为空间只能整块使用，比如存储块1的可用空间有110GB，但是每次任务需要占用30GB，那么$n(1) = 3$，而$M = 1$。</p>\n<p>在后续的模型中，我们假定每次需要消耗的空间$M$不变，默认$M = 1$，而$n(i)$必然是$M$的正整数倍，由此重新得到$\\Phi(n(i), \\eta)$。</p>\n<p>同时，增加性质2的稀释约束条件：$\\Phi(n(i), \\eta) \\times \\eta \\leq n(i)$，避免负载溢出。</p>\n<p>出于理解方便，这里把路由计算抽象成把小球存放到柜子里的动作：所有柜子都已按可用空间由大及小排序;</p>\n<h2 id=\"双柜模型\"><a href=\"#双柜模型\" class=\"headerlink\" title=\"双柜模型\"></a>双柜模型</h2><p>首先，简单地介绍下算法，这里先假设有只有2个球柜，最左边的红色小球代表的是agent的并发度$\\eta$，图中的渐变色小球表示有50%的概率被选择。<br><img src=\"/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/2boxes.png\" alt=\"图1：双柜模型\"></p>\n<p>由此，可以得到第1个柜子被选中的概率为: $\\Phi(i=0,\\eta,\\delta)=\\dfrac{1}{2} + \\dfrac{\\delta}{2(\\eta)}$；<br>而第2个柜子被选中的概率为: $\\Phi(i=1,\\eta,\\delta)=\\dfrac{1}{2} - \\dfrac{\\delta}{2(\\eta)}$；<br>这里，$\\delta$是第1个柜子比第2个多出来的空格数，此示例中$\\delta$，$\\delta \\in N^+$，引入$\\delta$的目的就是为了满足性质3;</p>\n<p>可以看出，当并发度$\\eta \\leq \\delta$时，选择第2个柜子的概率为0(<strong>因为概率不能小于0</strong>)。第1个规格被选择的概率则是$100%$。<br>当并发度$\\eta \\geq \\delta$时，优先填充第1个柜子多出来的2个空格，剩余小球才会随机均分到2个柜子中。<br>这也是因为算法的性质3，在第1个规格可用较多的时候会倾向于优选1，从而保障2个柜子的整体可用空间在选择后趋向均衡。</p>\n<h2 id=\"标准模型\"><a href=\"#标准模型\" class=\"headerlink\" title=\"标准模型\"></a>标准模型</h2><p>相比双柜模型，实际应用的场景会略微复杂一点。可以放球的柜子不但有多个，而且柜子的可用空间还可能会相等。如图给出7个柜子，可用空间分别为（7，6，6，5，3，3，2）。需要放置15个小球，即并发度$\\eta=15$：<br><img src=\"/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/standardmodel.png\" alt=\"图2：标准模型\"></p>\n<p>标准模型仍然要满足$\\Phi$的第3点性质（趋向均衡）：</p>\n<ul>\n<li>小球趋向于优先填充（occupied）可用空间最多的柜子，一直达到均衡线（Balance）；</li>\n<li>剩余的小球（Rest requires）只能在Balance上一层可选位置（Rest Available）中随机选择；</li>\n</ul>\n<p>因此，可以得到</p>\n<script type=\"math/tex; mode=display\">\n\\Phi=\\dfrac{\\Delta_{i}+P}{O+NP}</script><p>其中，</p>\n<ul>\n<li>$\\Delta_{i}$表示第i个柜子在Balance线以下的空间数量；</li>\n<li>$P$表示剩余小球在水位上面选择第i个柜子的朴素概率；</li>\n<li>$O$表示Balance线以下所有occupied的柜子空间；</li>\n<li>$N$表示可被选择的柜子数量，不是所有的柜子都会被选择，远高于Balance的柜子是不考虑的。</li>\n</ul>\n<p>分析到这里，没有什么比立即给出算法的伪代码更简单明了的了。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">FUNCTION router() -&gt; probability</div><div class=\"line\">    var require = concurrency # 把并发度定义为需要放置小球的数量</div><div class=\"line\">    var balance = occupied = avail = rest_avail = rest_require = box_num = 0</div><div class=\"line\">    for box in Boxes</div><div class=\"line\">        CALCULATE box.diff_vs_next # 比右邻box多的格子数</div><div class=\"line\">        box_num += 1</div><div class=\"line\">        if box.diff_vs_next == 0</div><div class=\"line\">            # 表示相邻2个box的可用格子数相同</div><div class=\"line\">            continue</div><div class=\"line\"></div><div class=\"line\">        avail += box_num * box.diff_vs_next</div><div class=\"line\">        if avail &gt; require</div><div class=\"line\">            break # 截断，远高于Balance线的不再考虑</div><div class=\"line\">        </div><div class=\"line\">        balance = box.capacity</div><div class=\"line\"></div><div class=\"line\">    for box in Boxes</div><div class=\"line\">        if box.capacity &lt;= balance</div><div class=\"line\">            break</div><div class=\"line\">        box.diff_vs_balance = box.capacity - balance</div><div class=\"line\">        occupied += box.diff_vs_balance</div><div class=\"line\"></div><div class=\"line\">    rest_require = require - occupied</div><div class=\"line\">    rest_avail   = avail   - occupied</div><div class=\"line\"></div><div class=\"line\">    var r = random()</div><div class=\"line\">    P = round(rest_require/rest_avail, 6)</div><div class=\"line\">    for box in Boxes</div><div class=\"line\">        Phi = round((box.diff_vs_balance + P)/(occupied + box_num * P), 6)</div><div class=\"line\">        if r &lt;= Phi</div><div class=\"line\">            RETURN box</div><div class=\"line\">        r -= Phi</div><div class=\"line\"></div><div class=\"line\">    RETURN NONE</div></pre></td></tr></table></figure></p>\n<h1 id=\"原型验证\"><a href=\"#原型验证\" class=\"headerlink\" title=\"原型验证\"></a>原型验证</h1><p>验证模型：</p>\n<ul>\n<li>随机初始化50个存储块，各自的初始可用空间差异较大，有的超过1000GB，而有的初始就只有300多GB；</li>\n<li>设置25个agent，各自并发执行route，每次route到可用存储块便会消耗其50GB空间；</li>\n<li>每个agent都会循环40次，每次之间sleep间隔100～500ms的随机值（模拟agent之间无序、无关联态）。</li>\n</ul>\n<p><img src=\"/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/boxer_router2.png\" alt=\"图3：原型模型\"></p>\n<p>可以看到：</p>\n<ul>\n<li>那些初始容量较多的存储块优先被选择，可用容量随时间逐步减少；</li>\n<li>而初始容量就少的存储块，因为不容易被选择，所以初始减幅很小；</li>\n<li>随着所有存储块的平均可用空间不断下降，原本不容易被选择的存储块被选到的概率增加，继而可用空间开始减少。</li>\n<li>最终在不断的消耗下，所有存储块的可用容量都会趋于均衡。</li>\n</ul>\n<p><strong>这就是均衡路由算法。</strong></p>\n","excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>最近有个需求涉及到分布式高并发获取资源的场景，简单的来说就是有个包含许多存储块的资源池，多个（并发的）任务处理的agent需要找到可用存储块并向其存储数据。</p>\n<p>按以往实践的经验，可以借助<strong>zookeeper全局锁</strong>的强一致性实现，大致思路如下：</p>\n<ol>\n<li>zk上保存所有存储块的可用容量信息；</li>\n<li>每个（独立并发的）agent获取zookeeper上所有存储块的信息，找出最优（比如可用空间最大）的存储块，然后向其存储业务数据，占用其一定的存储空间，（即把扣除后的可用空间写回到zookeeper上）；</li>\n<li>因为zookeeper的强一致性，确保了多个agent同时写入也只有1个会写成功，其它会失败；</li>\n<li>那么其它的agent只能重新获取zookeeper上的数据，再进入第2步去计算；</li>\n</ol>\n<p>上述的方案在大多数场景都是“适用”的。但是在高并发度诉求的场景下，全局锁的存在会严重影响并发度的性能。因为当1个agent写入最新值的时候，原本<strong>最优的</strong>的存储块，可能已经变成非最优，而其它agent只能废弃它们已经选择的“最优”结果，重新向zookeeper获取存储块信息并再次计算。</p>\n<pre class=\"mermaid\">sequenceDiagram\nparticipant Agent_1\nparticipant zookeeper\nparticipant Agent_2\nparticipant Agent_3\n\nzookeeper->>+Agent_1: get chunk list (version_0)\nzookeeper->>+Agent_2: get same chunk list (version_0)\nzookeeper->>+Agent_3: get chunk list (version_0)\nAgent_1->>-zookeeper: set chunk_i as used (version_1)\nAgent_2-->>-zookeeper: set FAIL, version changed\nNote over Agent_2,zookeeper: because of Agent_1 is set.\nzookeeper->>+Agent_2: get new chunk list (version_1)\nAgent_2->>-zookeeper: set chunk_j as used (version_2)\nAgent_3-->>-zookeeper: wait for Agent_2 set successfully.</pre>\n\n<p>上图中的version是zookeeper中保证get/set一致性的属性。然而这一过程的影响在高并发度的时候是无法忽略的：当Agent_1获取到最优，并写入zookeeper后，剩下的n-1个agent都因为一致性而重新向zookeeper获取并计算。等Agent_2写入zookeeper后，剩下的n-2又要重新获取。简单地类推这个过程，可以得到影响为（n-1）的阶乘（<strong>这个结果并不严谨，因为Agent_1可能已经完成手上的任务并重新参与这个过程</strong>）：</p>\n<script type=\"math/tex; mode=display\">\nInfection = (n-1)!</script><h1 id=\"假设\"><a href=\"#假设\" class=\"headerlink\" title=\"假设\"></a>假设</h1><p>出于维持高并发度的考虑，必然需要我们放下强一致性的全局锁方案。可以设想一下，每个（高并发的）agent在路由（选择）可用存储块的时候完全不关联，而是各自独立从zookeeper上获取到存储块信息后，通过1个路由算法$\\Phi$的计算，就能得到最优存储块。</p>\n<p>这样，对于我们来说，关键问题就是如何找到这个算法$\\phi$。</p>\n<ul>\n<li>性质1：显然这个$\\Phi$应该是概率性质的。因为如果$\\Phi$的计算是固定，比如只选择可用容量最大的存储块，那么在某一瞬间，所有正在路由的agent都会找到相同的存储块，结果就是该存储块因为大量向其存储数据而负载溢出（空间冲爆了）;</li>\n<li>性质2：$\\Phi$应该是当前agent的并发度$\\eta$的函数，否则无法稀释概率，导致多个agent选择相同存储块，最终负载溢出;</li>\n<li>性质3：$\\Phi$虽然是概率性质的，但是空间越大的存储块应该有越高的概率被选择;</li>\n</ul>\n<p>第1点是算法$\\Phi$的数学性质，第2点是防止溢出的客观约束，第3点是倾向均衡的人为预期。这3点共同保证了：即使初始状态各个存储块的可用空间不一致（例如有些快用尽，而有些新扩容出来），但是随着时间的推移（各高并发agent不断路由并消耗），所有存储块的可用空间应当趋于一致，即达到存储的负载均衡。</p>\n<p><strong>综上所述，这里给出1个均衡路由的设计模型。</strong></p>\n<h1 id=\"均衡路由模型\"><a href=\"#均衡路由模型\" class=\"headerlink\" title=\"均衡路由模型\"></a>均衡路由模型</h1><p>概率泛函中$\\Phi(n(i), \\eta, M)$，$n(i)$为第i个存储块的可用空间，$\\eta$为agent的并发度，$M$是每次路由占用的空间。</p>\n<p>注意：这里的$n(i)$和$M$都是无量纲的归一化值，因为空间只能整块使用，比如存储块1的可用空间有110GB，但是每次任务需要占用30GB，那么$n(1) = 3$，而$M = 1$。</p>\n<p>在后续的模型中，我们假定每次需要消耗的空间$M$不变，默认$M = 1$，而$n(i)$必然是$M$的正整数倍，由此重新得到$\\Phi(n(i), \\eta)$。</p>\n<p>同时，增加性质2的稀释约束条件：$\\Phi(n(i), \\eta) \\times \\eta \\leq n(i)$，避免负载溢出。</p>\n<p>出于理解方便，这里把路由计算抽象成把小球存放到柜子里的动作：所有柜子都已按可用空间由大及小排序;</p>\n<h2 id=\"双柜模型\"><a href=\"#双柜模型\" class=\"headerlink\" title=\"双柜模型\"></a>双柜模型</h2><p>首先，简单地介绍下算法，这里先假设有只有2个球柜，最左边的红色小球代表的是agent的并发度$\\eta$，图中的渐变色小球表示有50%的概率被选择。<br><img src=\"/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/2boxes.png\" alt=\"图1：双柜模型\"></p>\n<p>由此，可以得到第1个柜子被选中的概率为: $\\Phi(i=0,\\eta,\\delta)=\\dfrac{1}{2} + \\dfrac{\\delta}{2(\\eta)}$；<br>而第2个柜子被选中的概率为: $\\Phi(i=1,\\eta,\\delta)=\\dfrac{1}{2} - \\dfrac{\\delta}{2(\\eta)}$；<br>这里，$\\delta$是第1个柜子比第2个多出来的空格数，此示例中$\\delta$，$\\delta \\in N^+$，引入$\\delta$的目的就是为了满足性质3;</p>\n<p>可以看出，当并发度$\\eta \\leq \\delta$时，选择第2个柜子的概率为0(<strong>因为概率不能小于0</strong>)。第1个规格被选择的概率则是$100%$。<br>当并发度$\\eta \\geq \\delta$时，优先填充第1个柜子多出来的2个空格，剩余小球才会随机均分到2个柜子中。<br>这也是因为算法的性质3，在第1个规格可用较多的时候会倾向于优选1，从而保障2个柜子的整体可用空间在选择后趋向均衡。</p>\n<h2 id=\"标准模型\"><a href=\"#标准模型\" class=\"headerlink\" title=\"标准模型\"></a>标准模型</h2><p>相比双柜模型，实际应用的场景会略微复杂一点。可以放球的柜子不但有多个，而且柜子的可用空间还可能会相等。如图给出7个柜子，可用空间分别为（7，6，6，5，3，3，2）。需要放置15个小球，即并发度$\\eta=15$：<br><img src=\"/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/standardmodel.png\" alt=\"图2：标准模型\"></p>\n<p>标准模型仍然要满足$\\Phi$的第3点性质（趋向均衡）：</p>\n<ul>\n<li>小球趋向于优先填充（occupied）可用空间最多的柜子，一直达到均衡线（Balance）；</li>\n<li>剩余的小球（Rest requires）只能在Balance上一层可选位置（Rest Available）中随机选择；</li>\n</ul>\n<p>因此，可以得到</p>\n<script type=\"math/tex; mode=display\">\n\\Phi=\\dfrac{\\Delta_{i}+P}{O+NP}</script><p>其中，</p>\n<ul>\n<li>$\\Delta_{i}$表示第i个柜子在Balance线以下的空间数量；</li>\n<li>$P$表示剩余小球在水位上面选择第i个柜子的朴素概率；</li>\n<li>$O$表示Balance线以下所有occupied的柜子空间；</li>\n<li>$N$表示可被选择的柜子数量，不是所有的柜子都会被选择，远高于Balance的柜子是不考虑的。</li>\n</ul>\n<p>分析到这里，没有什么比立即给出算法的伪代码更简单明了的了。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">FUNCTION router() -&gt; probability</div><div class=\"line\">    var require = concurrency # 把并发度定义为需要放置小球的数量</div><div class=\"line\">    var balance = occupied = avail = rest_avail = rest_require = box_num = 0</div><div class=\"line\">    for box in Boxes</div><div class=\"line\">        CALCULATE box.diff_vs_next # 比右邻box多的格子数</div><div class=\"line\">        box_num += 1</div><div class=\"line\">        if box.diff_vs_next == 0</div><div class=\"line\">            # 表示相邻2个box的可用格子数相同</div><div class=\"line\">            continue</div><div class=\"line\"></div><div class=\"line\">        avail += box_num * box.diff_vs_next</div><div class=\"line\">        if avail &gt; require</div><div class=\"line\">            break # 截断，远高于Balance线的不再考虑</div><div class=\"line\">        </div><div class=\"line\">        balance = box.capacity</div><div class=\"line\"></div><div class=\"line\">    for box in Boxes</div><div class=\"line\">        if box.capacity &lt;= balance</div><div class=\"line\">            break</div><div class=\"line\">        box.diff_vs_balance = box.capacity - balance</div><div class=\"line\">        occupied += box.diff_vs_balance</div><div class=\"line\"></div><div class=\"line\">    rest_require = require - occupied</div><div class=\"line\">    rest_avail   = avail   - occupied</div><div class=\"line\"></div><div class=\"line\">    var r = random()</div><div class=\"line\">    P = round(rest_require/rest_avail, 6)</div><div class=\"line\">    for box in Boxes</div><div class=\"line\">        Phi = round((box.diff_vs_balance + P)/(occupied + box_num * P), 6)</div><div class=\"line\">        if r &lt;= Phi</div><div class=\"line\">            RETURN box</div><div class=\"line\">        r -= Phi</div><div class=\"line\"></div><div class=\"line\">    RETURN NONE</div></pre></td></tr></table></figure></p>\n<h1 id=\"原型验证\"><a href=\"#原型验证\" class=\"headerlink\" title=\"原型验证\"></a>原型验证</h1><p>验证模型：</p>\n<ul>\n<li>随机初始化50个存储块，各自的初始可用空间差异较大，有的超过1000GB，而有的初始就只有300多GB；</li>\n<li>设置25个agent，各自并发执行route，每次route到可用存储块便会消耗其50GB空间；</li>\n<li>每个agent都会循环40次，每次之间sleep间隔100～500ms的随机值（模拟agent之间无序、无关联态）。</li>\n</ul>\n<p><img src=\"/2019/01/14/Balance-Router-Algorithm-in-High-Concurrency/boxer_router2.png\" alt=\"图3：原型模型\"></p>\n<p>可以看到：</p>\n<ul>\n<li>那些初始容量较多的存储块优先被选择，可用容量随时间逐步减少；</li>\n<li>而初始容量就少的存储块，因为不容易被选择，所以初始减幅很小；</li>\n<li>随着所有存储块的平均可用空间不断下降，原本不容易被选择的存储块被选到的概率增加，继而可用空间开始减少。</li>\n<li>最终在不断的消耗下，所有存储块的可用容量都会趋于均衡。</li>\n</ul>\n<p><strong>这就是均衡路由算法。</strong></p>\n"},{"title":"国外龟缸的简单设计","date":"2012-02-11T03:25:01.000Z","_content":"\n\n最近看了许多龟友的龟缸设计。大受启发，所以开始google了一下，找了一些国外的龟缸设计。\n今天就介绍一种简单的设计理念。对于已经知道的龟友，希望能够给予更多的讨论和建议。\n下面开始：\n![](20120211-1.jpg)\n\n<!--more--> \n\n石头装备，无论是卵石，砖石，还是什么东西，往缸里一堆，便构成了晒台。这种设计的不如人意之处在于严重压缩了本来就不大的水体空间。\n![](20120211-2.jpg)\n晒台装，晒台的优势在于，比起石头装，它释放了水体的空间。缺陷在于压缩了水面的空间，影响了龟在上水层游动时的范围。\n![](20120211-3.jpg)\n水景装，其中以沉木为主打。造景本身需要空间，利用造景的实体作为晒台，就能很好的与美结合。\n水景装是用的最多的。但是今天要介绍的是一种利用纵向空间布置的龟缸，如下:\n![](20120211-4.jpg)\n我也不知道怎么称呼这种设计，它很好的利用了上下空间，把陆地和水体分离。\n除了上陆地的那个横截面被阻挡之外，整个水体的空间得以保存。\n此外，充分利用缸体的大小，延展了陆地部分的空间，需要的还可以设计龟巢。\n改龟友的设计灯源用了2跟节能灯，和一个日晒等。从而保证陆地和水面的光线。\n![](20120211-5.jpg)\n图片展示的是深水养龟，当然根据大家养龟的品种不同，可以自由选择水位高低。\n延展的水体里，适当的可以养一些鱼。也许会活不长。\n![](20120211-6.jpg)\n上陆部分用的一般的柔性网孔布，应该不难做到。\n国内的龟友很多都是整理箱控。但无论你玻璃缸控还是什么控，一旦理念形成，设计也就应运而生。\n献给每一位整理箱控，包括本人。\n![](20120211-7.jpg)\n整理箱组合，分离陆地和水体空间。原理还是那个不变的原理。\n个人觉得瀑布过滤效果不佳。相信这位龟友是为了制约成本。\n推荐滤筒，不要因过滤而压缩了水体的空间。\n水中放一点沉木或者植物，让龟的运动不在直来直去，这可以增加行程的距离感（相对走直线而言）。\n![](20120211-8.jpg)\n组合装的侧视图。\n如果你想更进一步，布置一个更漂亮的龟巢。见下。\n![](20120211-9.jpg)\n简单组合。表面上仅仅就比我的整理箱多了一个龟窝，但冲设计上，这是一个理念的突破。\n![](20120211-10.jpg)\n![](20120211-11.jpg)\n![](20120211-12.jpg)\n龟巢和龟台的区别在于内部，它的内部放了什么我也不知道。相信懂龟的朋友们一定更清楚。\n最后，希望每一位龟友都能设计一个让龟舒适的窝，同时又不会影响自己家里的生活空间！\n![](20120211-13.jpg)","source":"_posts/20120211-国外龟缸的简单设计.md","raw":"---\ntitle: 国外龟缸的简单设计\ndate: 2012-02-11 11:25:01\ncategories: 水族\ntags: [造景,龟龟]\n---\n\n\n最近看了许多龟友的龟缸设计。大受启发，所以开始google了一下，找了一些国外的龟缸设计。\n今天就介绍一种简单的设计理念。对于已经知道的龟友，希望能够给予更多的讨论和建议。\n下面开始：\n![](20120211-1.jpg)\n\n<!--more--> \n\n石头装备，无论是卵石，砖石，还是什么东西，往缸里一堆，便构成了晒台。这种设计的不如人意之处在于严重压缩了本来就不大的水体空间。\n![](20120211-2.jpg)\n晒台装，晒台的优势在于，比起石头装，它释放了水体的空间。缺陷在于压缩了水面的空间，影响了龟在上水层游动时的范围。\n![](20120211-3.jpg)\n水景装，其中以沉木为主打。造景本身需要空间，利用造景的实体作为晒台，就能很好的与美结合。\n水景装是用的最多的。但是今天要介绍的是一种利用纵向空间布置的龟缸，如下:\n![](20120211-4.jpg)\n我也不知道怎么称呼这种设计，它很好的利用了上下空间，把陆地和水体分离。\n除了上陆地的那个横截面被阻挡之外，整个水体的空间得以保存。\n此外，充分利用缸体的大小，延展了陆地部分的空间，需要的还可以设计龟巢。\n改龟友的设计灯源用了2跟节能灯，和一个日晒等。从而保证陆地和水面的光线。\n![](20120211-5.jpg)\n图片展示的是深水养龟，当然根据大家养龟的品种不同，可以自由选择水位高低。\n延展的水体里，适当的可以养一些鱼。也许会活不长。\n![](20120211-6.jpg)\n上陆部分用的一般的柔性网孔布，应该不难做到。\n国内的龟友很多都是整理箱控。但无论你玻璃缸控还是什么控，一旦理念形成，设计也就应运而生。\n献给每一位整理箱控，包括本人。\n![](20120211-7.jpg)\n整理箱组合，分离陆地和水体空间。原理还是那个不变的原理。\n个人觉得瀑布过滤效果不佳。相信这位龟友是为了制约成本。\n推荐滤筒，不要因过滤而压缩了水体的空间。\n水中放一点沉木或者植物，让龟的运动不在直来直去，这可以增加行程的距离感（相对走直线而言）。\n![](20120211-8.jpg)\n组合装的侧视图。\n如果你想更进一步，布置一个更漂亮的龟巢。见下。\n![](20120211-9.jpg)\n简单组合。表面上仅仅就比我的整理箱多了一个龟窝，但冲设计上，这是一个理念的突破。\n![](20120211-10.jpg)\n![](20120211-11.jpg)\n![](20120211-12.jpg)\n龟巢和龟台的区别在于内部，它的内部放了什么我也不知道。相信懂龟的朋友们一定更清楚。\n最后，希望每一位龟友都能设计一个让龟舒适的窝，同时又不会影响自己家里的生活空间！\n![](20120211-13.jpg)","slug":"20120211-国外龟缸的简单设计","published":1,"updated":"2019-01-16T17:25:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqzgkwbn0006nnwvlfmmfg37","content":"<p>最近看了许多龟友的龟缸设计。大受启发，所以开始google了一下，找了一些国外的龟缸设计。<br>今天就介绍一种简单的设计理念。对于已经知道的龟友，希望能够给予更多的讨论和建议。<br>下面开始：<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-1.jpg\" alt=\"\"></p>\n<a id=\"more\"></a> \n<p>石头装备，无论是卵石，砖石，还是什么东西，往缸里一堆，便构成了晒台。这种设计的不如人意之处在于严重压缩了本来就不大的水体空间。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-2.jpg\" alt=\"\"><br>晒台装，晒台的优势在于，比起石头装，它释放了水体的空间。缺陷在于压缩了水面的空间，影响了龟在上水层游动时的范围。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-3.jpg\" alt=\"\"><br>水景装，其中以沉木为主打。造景本身需要空间，利用造景的实体作为晒台，就能很好的与美结合。<br>水景装是用的最多的。但是今天要介绍的是一种利用纵向空间布置的龟缸，如下:<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-4.jpg\" alt=\"\"><br>我也不知道怎么称呼这种设计，它很好的利用了上下空间，把陆地和水体分离。<br>除了上陆地的那个横截面被阻挡之外，整个水体的空间得以保存。<br>此外，充分利用缸体的大小，延展了陆地部分的空间，需要的还可以设计龟巢。<br>改龟友的设计灯源用了2跟节能灯，和一个日晒等。从而保证陆地和水面的光线。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-5.jpg\" alt=\"\"><br>图片展示的是深水养龟，当然根据大家养龟的品种不同，可以自由选择水位高低。<br>延展的水体里，适当的可以养一些鱼。也许会活不长。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-6.jpg\" alt=\"\"><br>上陆部分用的一般的柔性网孔布，应该不难做到。<br>国内的龟友很多都是整理箱控。但无论你玻璃缸控还是什么控，一旦理念形成，设计也就应运而生。<br>献给每一位整理箱控，包括本人。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-7.jpg\" alt=\"\"><br>整理箱组合，分离陆地和水体空间。原理还是那个不变的原理。<br>个人觉得瀑布过滤效果不佳。相信这位龟友是为了制约成本。<br>推荐滤筒，不要因过滤而压缩了水体的空间。<br>水中放一点沉木或者植物，让龟的运动不在直来直去，这可以增加行程的距离感（相对走直线而言）。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-8.jpg\" alt=\"\"><br>组合装的侧视图。<br>如果你想更进一步，布置一个更漂亮的龟巢。见下。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-9.jpg\" alt=\"\"><br>简单组合。表面上仅仅就比我的整理箱多了一个龟窝，但冲设计上，这是一个理念的突破。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-10.jpg\" alt=\"\"><br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-11.jpg\" alt=\"\"><br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-12.jpg\" alt=\"\"><br>龟巢和龟台的区别在于内部，它的内部放了什么我也不知道。相信懂龟的朋友们一定更清楚。<br>最后，希望每一位龟友都能设计一个让龟舒适的窝，同时又不会影响自己家里的生活空间！<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-13.jpg\" alt=\"\"></p>\n","excerpt":"<p>最近看了许多龟友的龟缸设计。大受启发，所以开始google了一下，找了一些国外的龟缸设计。<br>今天就介绍一种简单的设计理念。对于已经知道的龟友，希望能够给予更多的讨论和建议。<br>下面开始：<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-1.jpg\" alt=\"\"></p>","more":"<p>石头装备，无论是卵石，砖石，还是什么东西，往缸里一堆，便构成了晒台。这种设计的不如人意之处在于严重压缩了本来就不大的水体空间。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-2.jpg\" alt=\"\"><br>晒台装，晒台的优势在于，比起石头装，它释放了水体的空间。缺陷在于压缩了水面的空间，影响了龟在上水层游动时的范围。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-3.jpg\" alt=\"\"><br>水景装，其中以沉木为主打。造景本身需要空间，利用造景的实体作为晒台，就能很好的与美结合。<br>水景装是用的最多的。但是今天要介绍的是一种利用纵向空间布置的龟缸，如下:<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-4.jpg\" alt=\"\"><br>我也不知道怎么称呼这种设计，它很好的利用了上下空间，把陆地和水体分离。<br>除了上陆地的那个横截面被阻挡之外，整个水体的空间得以保存。<br>此外，充分利用缸体的大小，延展了陆地部分的空间，需要的还可以设计龟巢。<br>改龟友的设计灯源用了2跟节能灯，和一个日晒等。从而保证陆地和水面的光线。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-5.jpg\" alt=\"\"><br>图片展示的是深水养龟，当然根据大家养龟的品种不同，可以自由选择水位高低。<br>延展的水体里，适当的可以养一些鱼。也许会活不长。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-6.jpg\" alt=\"\"><br>上陆部分用的一般的柔性网孔布，应该不难做到。<br>国内的龟友很多都是整理箱控。但无论你玻璃缸控还是什么控，一旦理念形成，设计也就应运而生。<br>献给每一位整理箱控，包括本人。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-7.jpg\" alt=\"\"><br>整理箱组合，分离陆地和水体空间。原理还是那个不变的原理。<br>个人觉得瀑布过滤效果不佳。相信这位龟友是为了制约成本。<br>推荐滤筒，不要因过滤而压缩了水体的空间。<br>水中放一点沉木或者植物，让龟的运动不在直来直去，这可以增加行程的距离感（相对走直线而言）。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-8.jpg\" alt=\"\"><br>组合装的侧视图。<br>如果你想更进一步，布置一个更漂亮的龟巢。见下。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-9.jpg\" alt=\"\"><br>简单组合。表面上仅仅就比我的整理箱多了一个龟窝，但冲设计上，这是一个理念的突破。<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-10.jpg\" alt=\"\"><br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-11.jpg\" alt=\"\"><br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-12.jpg\" alt=\"\"><br>龟巢和龟台的区别在于内部，它的内部放了什么我也不知道。相信懂龟的朋友们一定更清楚。<br>最后，希望每一位龟友都能设计一个让龟舒适的窝，同时又不会影响自己家里的生活空间！<br><img src=\"/2012/02/11/20120211-国外龟缸的简单设计/20120211-13.jpg\" alt=\"\"></p>"},{"title":"今天兴起，测了测养龟的水质","date":"2012-08-13T08:56:41.000Z","_content":"\n龟龟搬家一个多月了，也换了整理箱来养龟。\n过滤还是用的AA360，全棉。\n（什么？要环？扯吧，全棉一样顶呱呱。）\n先上一张先。\n![](20120813-1.jpg)\n\n<!--more--> \n\n一看拍照了，全出来了。以为要吃东西。我喂食很规律的，每天早上8点。\n![](20120813-2.jpg)\n![](20120813-3.jpg)\n\n\n养龟的水体不能笑，不然水质很难维持，之前用小缸养的时候深有体会。\n为了避免重蹈覆辙，这次水位加深到19cm，毕竟夏天嘛，需要的。\n啥？晒台？大热天谁谁谁晒太阳了？\n除了房间开空调的时候，平时龟龟都待水里。\n当然陆地还是需要的，有了陆地，龟龟不易腐皮了。\n![](20120813-4.jpg)\n\n别看陆地很小，之前做的陆地是很大的，比整理箱还大。\n但是大也没用，龟龟从来不去，顶多就是在水边的滤棉下面打个盹。\n今天心血来潮，测了测水质，pH忘了拍照了一刚。\npH有6.5，必须的都养了1个月了老水了。\n自来水是7.2左右。\nNH3（左边），约0.25 ppm，必然的，龟龟的便便不是每天都抽的，一般也就是2~3天抽一次。\n这里插一句，不要指望滤桶抽便便，就算真抽了，对滤桶的负荷也是很大的。\nNO2（中间），最关键的一项，接近0 ppm，说明滤桶中全棉的生化过滤还是刚刚的。\nNO3（右边），My God，达到40 ppm左右，哎，看来需要加强换水了，不然也忒高了点吧。\n![](20120813-5.jpg)\n\n经历了一年多的养龟养鱼，才发现，其实养龟不需要太过追求什么过滤什么玻璃环。\n养鱼，追求水质的同时还要求水质稳定。\n而对于龟，放个过滤桶，放块过滤棉，然后全生化棉，就基本可以保证水质问题。\n千万不要用瀑布过滤啊，那玩意不是养龟的，太扯了。\n不要过于频繁换自来水，尤其是幼龟，新水易刺激腐皮。\n当然，像我这样NO3过高的也定然不是好的榜样。\n","source":"_posts/20120813-今天兴起测了测养龟的水质.md","raw":"---\ntitle: 今天兴起，测了测养龟的水质\ndate: 2012-08-13 16:56:41\ncategories: 水族\ntags: 龟龟\n---\n\n龟龟搬家一个多月了，也换了整理箱来养龟。\n过滤还是用的AA360，全棉。\n（什么？要环？扯吧，全棉一样顶呱呱。）\n先上一张先。\n![](20120813-1.jpg)\n\n<!--more--> \n\n一看拍照了，全出来了。以为要吃东西。我喂食很规律的，每天早上8点。\n![](20120813-2.jpg)\n![](20120813-3.jpg)\n\n\n养龟的水体不能笑，不然水质很难维持，之前用小缸养的时候深有体会。\n为了避免重蹈覆辙，这次水位加深到19cm，毕竟夏天嘛，需要的。\n啥？晒台？大热天谁谁谁晒太阳了？\n除了房间开空调的时候，平时龟龟都待水里。\n当然陆地还是需要的，有了陆地，龟龟不易腐皮了。\n![](20120813-4.jpg)\n\n别看陆地很小，之前做的陆地是很大的，比整理箱还大。\n但是大也没用，龟龟从来不去，顶多就是在水边的滤棉下面打个盹。\n今天心血来潮，测了测水质，pH忘了拍照了一刚。\npH有6.5，必须的都养了1个月了老水了。\n自来水是7.2左右。\nNH3（左边），约0.25 ppm，必然的，龟龟的便便不是每天都抽的，一般也就是2~3天抽一次。\n这里插一句，不要指望滤桶抽便便，就算真抽了，对滤桶的负荷也是很大的。\nNO2（中间），最关键的一项，接近0 ppm，说明滤桶中全棉的生化过滤还是刚刚的。\nNO3（右边），My God，达到40 ppm左右，哎，看来需要加强换水了，不然也忒高了点吧。\n![](20120813-5.jpg)\n\n经历了一年多的养龟养鱼，才发现，其实养龟不需要太过追求什么过滤什么玻璃环。\n养鱼，追求水质的同时还要求水质稳定。\n而对于龟，放个过滤桶，放块过滤棉，然后全生化棉，就基本可以保证水质问题。\n千万不要用瀑布过滤啊，那玩意不是养龟的，太扯了。\n不要过于频繁换自来水，尤其是幼龟，新水易刺激腐皮。\n当然，像我这样NO3过高的也定然不是好的榜样。\n","slug":"20120813-今天兴起测了测养龟的水质","published":1,"updated":"2019-01-16T17:25:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqzgkwbs0007nnwvsps8ky06","content":"<p>龟龟搬家一个多月了，也换了整理箱来养龟。<br>过滤还是用的AA360，全棉。<br>（什么？要环？扯吧，全棉一样顶呱呱。）<br>先上一张先。<br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-1.jpg\" alt=\"\"></p>\n<a id=\"more\"></a> \n<p>一看拍照了，全出来了。以为要吃东西。我喂食很规律的，每天早上8点。<br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-2.jpg\" alt=\"\"><br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-3.jpg\" alt=\"\"></p>\n<p>养龟的水体不能笑，不然水质很难维持，之前用小缸养的时候深有体会。<br>为了避免重蹈覆辙，这次水位加深到19cm，毕竟夏天嘛，需要的。<br>啥？晒台？大热天谁谁谁晒太阳了？<br>除了房间开空调的时候，平时龟龟都待水里。<br>当然陆地还是需要的，有了陆地，龟龟不易腐皮了。<br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-4.jpg\" alt=\"\"></p>\n<p>别看陆地很小，之前做的陆地是很大的，比整理箱还大。<br>但是大也没用，龟龟从来不去，顶多就是在水边的滤棉下面打个盹。<br>今天心血来潮，测了测水质，pH忘了拍照了一刚。<br>pH有6.5，必须的都养了1个月了老水了。<br>自来水是7.2左右。<br>NH3（左边），约0.25 ppm，必然的，龟龟的便便不是每天都抽的，一般也就是2~3天抽一次。<br>这里插一句，不要指望滤桶抽便便，就算真抽了，对滤桶的负荷也是很大的。<br>NO2（中间），最关键的一项，接近0 ppm，说明滤桶中全棉的生化过滤还是刚刚的。<br>NO3（右边），My God，达到40 ppm左右，哎，看来需要加强换水了，不然也忒高了点吧。<br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-5.jpg\" alt=\"\"></p>\n<p>经历了一年多的养龟养鱼，才发现，其实养龟不需要太过追求什么过滤什么玻璃环。<br>养鱼，追求水质的同时还要求水质稳定。<br>而对于龟，放个过滤桶，放块过滤棉，然后全生化棉，就基本可以保证水质问题。<br>千万不要用瀑布过滤啊，那玩意不是养龟的，太扯了。<br>不要过于频繁换自来水，尤其是幼龟，新水易刺激腐皮。<br>当然，像我这样NO3过高的也定然不是好的榜样。</p>\n","excerpt":"<p>龟龟搬家一个多月了，也换了整理箱来养龟。<br>过滤还是用的AA360，全棉。<br>（什么？要环？扯吧，全棉一样顶呱呱。）<br>先上一张先。<br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-1.jpg\" alt=\"\"></p>","more":"<p>一看拍照了，全出来了。以为要吃东西。我喂食很规律的，每天早上8点。<br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-2.jpg\" alt=\"\"><br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-3.jpg\" alt=\"\"></p>\n<p>养龟的水体不能笑，不然水质很难维持，之前用小缸养的时候深有体会。<br>为了避免重蹈覆辙，这次水位加深到19cm，毕竟夏天嘛，需要的。<br>啥？晒台？大热天谁谁谁晒太阳了？<br>除了房间开空调的时候，平时龟龟都待水里。<br>当然陆地还是需要的，有了陆地，龟龟不易腐皮了。<br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-4.jpg\" alt=\"\"></p>\n<p>别看陆地很小，之前做的陆地是很大的，比整理箱还大。<br>但是大也没用，龟龟从来不去，顶多就是在水边的滤棉下面打个盹。<br>今天心血来潮，测了测水质，pH忘了拍照了一刚。<br>pH有6.5，必须的都养了1个月了老水了。<br>自来水是7.2左右。<br>NH3（左边），约0.25 ppm，必然的，龟龟的便便不是每天都抽的，一般也就是2~3天抽一次。<br>这里插一句，不要指望滤桶抽便便，就算真抽了，对滤桶的负荷也是很大的。<br>NO2（中间），最关键的一项，接近0 ppm，说明滤桶中全棉的生化过滤还是刚刚的。<br>NO3（右边），My God，达到40 ppm左右，哎，看来需要加强换水了，不然也忒高了点吧。<br><img src=\"/2012/08/13/20120813-今天兴起测了测养龟的水质/20120813-5.jpg\" alt=\"\"></p>\n<p>经历了一年多的养龟养鱼，才发现，其实养龟不需要太过追求什么过滤什么玻璃环。<br>养鱼，追求水质的同时还要求水质稳定。<br>而对于龟，放个过滤桶，放块过滤棉，然后全生化棉，就基本可以保证水质问题。<br>千万不要用瀑布过滤啊，那玩意不是养龟的，太扯了。<br>不要过于频繁换自来水，尤其是幼龟，新水易刺激腐皮。<br>当然，像我这样NO3过高的也定然不是好的榜样。</p>"},{"title":"延迟清除队列与rotate","date":"2019-01-08T14:24:28.000Z","_content":"\n## 背景\n记得很早之前学习c++11 API的时候，遇到过1个接口[std::rotate](https://zh.cppreference.com/w/cpp/algorithm/rotate)，当时不太能理解为什么要把容器整体移动一位，总觉得这种接口没有什么实际价值（事实上这个接口实现太通用，做了o(n)的移动操作，导致可用性降低）。\n\n最近在工作中遇到个任务队列设计，要求从队列中取出任务对象，但是不要立即清除该对象在队列中的位置。由上层业务决定（上层会判断该任务是否需要等待，如果不等待才需要清除，否则仍旧保留在队列中。\n\n综合一下诉求如下：\n\n1. 提供获取任务的get接口，但是不立即从队列中清除；\n2. 每次调用get接口都能获取下一个任务；\n3. 上层执行任务后判断是否需要remove任务；\n4. 上述操作性能不能太差；\n\n## 第一印象：\n这里不区分deque、list等容器的差异，线性容器统一使用list讨论设计方案。\n\n第一反应，能想到的就是使用list，或者unoredered_map。\n但为了追求高性能同时不想扩大存储内存，因而选择利用list的iterator，因为iter在新增、删除非本iter时不会失效。为了简单，我们让代码中的get接口直接返回iter（这里是为了示例，不对iter做封装）。\n\n```c++\nusing Lock = std::lock_guard<std::mutex>;\ntemplate<typename F> class IterQueue {\n    std::list<F> l_ ;\n    std::mutex mtx_ ;\n    typename std::list<F>::iterator pos;\npublic:\n    IterQueue():pos(1_.end()){}\n    \n    void push(F&& fu) { Lock Lock(mtx_); 1_.empLace_back(std::forward<F>(fu)); }\n\n    typename std::list<F>::iterator get() {\n        Lock Lock(mtx_);\n        /*省略1_为空场景处理*/\n        if (pos == 1_.end()) {\n            pos = 1_.begin();\n        }\n        return pos++;\n    }\n\n    void remove( typename std::list<F>::iterator it) {\n        Lock Lock(mtx_);\n        if (pos == it) pos = 1_.erase(it);\n        else 1_.erase(it);\n    }\n}\n```\n\n这种方案的优点很明显，返回iter，如果上层要删除，传回iter，erase的性能是o(1)的。\n其缺点同样也是显而易见：\n\n* iter对外暴露（虽然可以进一步封装掉，也只是暴露的程度有别）;\n* 同时对多线程的并发操作有约束，不能并发erase，否则可能会导致其它线程获取的iter失效。**这里之所以是可能，因为其它线程持有的iter不是erase的那个就不会失效**；\n\n\n## 再想一想\n上述方案使用iter其实有2个原因：\n\n* 变更pos_，使得每次get都能获取到下一个；\n* remove时不需要遍历，性能o(1)；\n\n针对这2个因素，同样也可以考虑利用rotate特性来实现，源码如下\n\n```c++\nusing Lock = std::lock_guard<std::mutex>;\ntemplate<typename F> class RotateQueue {\n    std::list<F> l_ ;\n    std::mutex mtx_ ;\npublic:\n    void push(F&& fu) { Lock Lock(mtx_); 1_.emplace_front( std::forward<F>(fu)); }\n\n    F get() {\n        Lock Lock(mtx_ );\n        1_.empLace_front(std::move(1_.back()));\n        1_.pop_back();\n        return l_.front();\n    }\n    \n    void remove(const F& fu) {\n        Lock Lock(mtx_ );\n        for(auto i = l_.begin(); i != l_.end(); ++i) {\n            if (fu == *i) {\n                l_.erase(i);\n                break;\n            }\n        }\n    }\n}\n```\n\n这样实现的优点很明显，不会暴露细节（iter）。\n在get的时候，我们做了1次rotate，把list的back对象move到了front，并同时返回这个新front对象；\n当上层remove这个对象的时候，因为是从begin开始的，这样就极大提升了找到的命中率。\n当然这个性能提升也不是完美的，可以想象：\n* 当上层单线程调用get/remove时，或者多线程，但是push的频率足够慢（慢于get --> remove的时间）时，remove的性能等价于o(1）;\n* 但当上层多线程且push频率较高时，remove性能仍然趋向o(n)；\n\n## 综合来看\n### IterQueue：\n* 更适合把实现嵌到上层代码中，这样iter可以作为上层对象的私有成员访问。\n* 其次上层应用可以根据实际是否会存在多线程并发iter，进一步优化代码，做好保护。\n\n### RotateQueue\n* 可以独立为1个管理对象，同时在push频率显著低于 `get -> remove`时具有接近于IterQueue的性能。\n* 但是对上层传入的对象有约束。要求对象的value不能相同，否则存在误删除问题。\n\n```mermaid\nsequenceDiagram\nThread1->>RotateQueue: get obj(value = 0x7fxxxxxx)\nThread2->>RotateQueue: get obj(value = 0x7fxxxxxx)\nThread1->>RotateQueue: remove obj(value = 0x7fxxxxxx)\nThread1->>RotateQueue: push new obj(value = 0x7fxxxxxx)\nThread2-->>RotateQueue: remove obj(value = 0x7fxxxxxx)\nNote left of Thread2 : the new pushed obj is unexpected removed!\n```\n","source":"_posts/延迟清除队列与rotate.md","raw":"---\ntitle: 延迟清除队列与rotate\ndate: 2019-01-08 22:24:28\ncategories: Distributed Develop\ntags:\n---\n\n## 背景\n记得很早之前学习c++11 API的时候，遇到过1个接口[std::rotate](https://zh.cppreference.com/w/cpp/algorithm/rotate)，当时不太能理解为什么要把容器整体移动一位，总觉得这种接口没有什么实际价值（事实上这个接口实现太通用，做了o(n)的移动操作，导致可用性降低）。\n\n最近在工作中遇到个任务队列设计，要求从队列中取出任务对象，但是不要立即清除该对象在队列中的位置。由上层业务决定（上层会判断该任务是否需要等待，如果不等待才需要清除，否则仍旧保留在队列中。\n\n综合一下诉求如下：\n\n1. 提供获取任务的get接口，但是不立即从队列中清除；\n2. 每次调用get接口都能获取下一个任务；\n3. 上层执行任务后判断是否需要remove任务；\n4. 上述操作性能不能太差；\n\n## 第一印象：\n这里不区分deque、list等容器的差异，线性容器统一使用list讨论设计方案。\n\n第一反应，能想到的就是使用list，或者unoredered_map。\n但为了追求高性能同时不想扩大存储内存，因而选择利用list的iterator，因为iter在新增、删除非本iter时不会失效。为了简单，我们让代码中的get接口直接返回iter（这里是为了示例，不对iter做封装）。\n\n```c++\nusing Lock = std::lock_guard<std::mutex>;\ntemplate<typename F> class IterQueue {\n    std::list<F> l_ ;\n    std::mutex mtx_ ;\n    typename std::list<F>::iterator pos;\npublic:\n    IterQueue():pos(1_.end()){}\n    \n    void push(F&& fu) { Lock Lock(mtx_); 1_.empLace_back(std::forward<F>(fu)); }\n\n    typename std::list<F>::iterator get() {\n        Lock Lock(mtx_);\n        /*省略1_为空场景处理*/\n        if (pos == 1_.end()) {\n            pos = 1_.begin();\n        }\n        return pos++;\n    }\n\n    void remove( typename std::list<F>::iterator it) {\n        Lock Lock(mtx_);\n        if (pos == it) pos = 1_.erase(it);\n        else 1_.erase(it);\n    }\n}\n```\n\n这种方案的优点很明显，返回iter，如果上层要删除，传回iter，erase的性能是o(1)的。\n其缺点同样也是显而易见：\n\n* iter对外暴露（虽然可以进一步封装掉，也只是暴露的程度有别）;\n* 同时对多线程的并发操作有约束，不能并发erase，否则可能会导致其它线程获取的iter失效。**这里之所以是可能，因为其它线程持有的iter不是erase的那个就不会失效**；\n\n\n## 再想一想\n上述方案使用iter其实有2个原因：\n\n* 变更pos_，使得每次get都能获取到下一个；\n* remove时不需要遍历，性能o(1)；\n\n针对这2个因素，同样也可以考虑利用rotate特性来实现，源码如下\n\n```c++\nusing Lock = std::lock_guard<std::mutex>;\ntemplate<typename F> class RotateQueue {\n    std::list<F> l_ ;\n    std::mutex mtx_ ;\npublic:\n    void push(F&& fu) { Lock Lock(mtx_); 1_.emplace_front( std::forward<F>(fu)); }\n\n    F get() {\n        Lock Lock(mtx_ );\n        1_.empLace_front(std::move(1_.back()));\n        1_.pop_back();\n        return l_.front();\n    }\n    \n    void remove(const F& fu) {\n        Lock Lock(mtx_ );\n        for(auto i = l_.begin(); i != l_.end(); ++i) {\n            if (fu == *i) {\n                l_.erase(i);\n                break;\n            }\n        }\n    }\n}\n```\n\n这样实现的优点很明显，不会暴露细节（iter）。\n在get的时候，我们做了1次rotate，把list的back对象move到了front，并同时返回这个新front对象；\n当上层remove这个对象的时候，因为是从begin开始的，这样就极大提升了找到的命中率。\n当然这个性能提升也不是完美的，可以想象：\n* 当上层单线程调用get/remove时，或者多线程，但是push的频率足够慢（慢于get --> remove的时间）时，remove的性能等价于o(1）;\n* 但当上层多线程且push频率较高时，remove性能仍然趋向o(n)；\n\n## 综合来看\n### IterQueue：\n* 更适合把实现嵌到上层代码中，这样iter可以作为上层对象的私有成员访问。\n* 其次上层应用可以根据实际是否会存在多线程并发iter，进一步优化代码，做好保护。\n\n### RotateQueue\n* 可以独立为1个管理对象，同时在push频率显著低于 `get -> remove`时具有接近于IterQueue的性能。\n* 但是对上层传入的对象有约束。要求对象的value不能相同，否则存在误删除问题。\n\n```mermaid\nsequenceDiagram\nThread1->>RotateQueue: get obj(value = 0x7fxxxxxx)\nThread2->>RotateQueue: get obj(value = 0x7fxxxxxx)\nThread1->>RotateQueue: remove obj(value = 0x7fxxxxxx)\nThread1->>RotateQueue: push new obj(value = 0x7fxxxxxx)\nThread2-->>RotateQueue: remove obj(value = 0x7fxxxxxx)\nNote left of Thread2 : the new pushed obj is unexpected removed!\n```\n","slug":"延迟清除队列与rotate","published":1,"updated":"2019-01-16T17:26:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqzgkwbw0008nnwvwp3mnzr5","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>记得很早之前学习c++11 API的时候，遇到过1个接口<a href=\"https://zh.cppreference.com/w/cpp/algorithm/rotate\">std::rotate</a>，当时不太能理解为什么要把容器整体移动一位，总觉得这种接口没有什么实际价值（事实上这个接口实现太通用，做了o(n)的移动操作，导致可用性降低）。</p>\n<p>最近在工作中遇到个任务队列设计，要求从队列中取出任务对象，但是不要立即清除该对象在队列中的位置。由上层业务决定（上层会判断该任务是否需要等待，如果不等待才需要清除，否则仍旧保留在队列中。</p>\n<p>综合一下诉求如下：</p>\n<ol>\n<li>提供获取任务的get接口，但是不立即从队列中清除；</li>\n<li>每次调用get接口都能获取下一个任务；</li>\n<li>上层执行任务后判断是否需要remove任务；</li>\n<li>上述操作性能不能太差；</li>\n</ol>\n<h2 id=\"第一印象：\"><a href=\"#第一印象：\" class=\"headerlink\" title=\"第一印象：\"></a>第一印象：</h2><p>这里不区分deque、list等容器的差异，线性容器统一使用list讨论设计方案。</p>\n<p>第一反应，能想到的就是使用list，或者unoredered_map。<br>但为了追求高性能同时不想扩大存储内存，因而选择利用list的iterator，因为iter在新增、删除非本iter时不会失效。为了简单，我们让代码中的get接口直接返回iter（这里是为了示例，不对iter做封装）。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Lock = <span class=\"built_in\">std</span>::lock_guard&lt;<span class=\"built_in\">std</span>::mutex&gt;;</div><div class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> F&gt; <span class=\"keyword\">class</span> IterQueue &#123;</div><div class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt; l_ ;</div><div class=\"line\">    <span class=\"built_in\">std</span>::mutex mtx_ ;</div><div class=\"line\">    <span class=\"keyword\">typename</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt;::iterator pos;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">    IterQueue():pos(<span class=\"number\">1</span>_.end())&#123;&#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(F&amp;&amp; fu)</span> </span>&#123; <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_)</span></span>; <span class=\"number\">1</span>_.empLace_back(<span class=\"built_in\">std</span>::forward&lt;F&gt;(fu)); &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">typename</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt;::<span class=\"function\">iterator <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_)</span></span>;</div><div class=\"line\">        <span class=\"comment\">/*省略1_为空场景处理*/</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (pos == <span class=\"number\">1</span>_.end()) &#123;</div><div class=\"line\">            pos = <span class=\"number\">1</span>_.begin();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> pos++;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">( <span class=\"keyword\">typename</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt;::iterator it)</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_)</span></span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (pos == it) pos = <span class=\"number\">1</span>_.erase(it);</div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"number\">1</span>_.erase(it);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这种方案的优点很明显，返回iter，如果上层要删除，传回iter，erase的性能是o(1)的。<br>其缺点同样也是显而易见：</p>\n<ul>\n<li>iter对外暴露（虽然可以进一步封装掉，也只是暴露的程度有别）;</li>\n<li>同时对多线程的并发操作有约束，不能并发erase，否则可能会导致其它线程获取的iter失效。<strong>这里之所以是可能，因为其它线程持有的iter不是erase的那个就不会失效</strong>；</li>\n</ul>\n<h2 id=\"再想一想\"><a href=\"#再想一想\" class=\"headerlink\" title=\"再想一想\"></a>再想一想</h2><p>上述方案使用iter其实有2个原因：</p>\n<ul>\n<li>变更pos_，使得每次get都能获取到下一个；</li>\n<li>remove时不需要遍历，性能o(1)；</li>\n</ul>\n<p>针对这2个因素，同样也可以考虑利用rotate特性来实现，源码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Lock = <span class=\"built_in\">std</span>::lock_guard&lt;<span class=\"built_in\">std</span>::mutex&gt;;</div><div class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> F&gt; <span class=\"keyword\">class</span> RotateQueue &#123;</div><div class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt; l_ ;</div><div class=\"line\">    <span class=\"built_in\">std</span>::mutex mtx_ ;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(F&amp;&amp; fu)</span> </span>&#123; <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_)</span></span>; <span class=\"number\">1</span>_.emplace_front( <span class=\"built_in\">std</span>::forward&lt;F&gt;(fu)); &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\">F <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_ )</span></span>;</div><div class=\"line\">        <span class=\"number\">1</span>_.empLace_front(<span class=\"built_in\">std</span>::move(<span class=\"number\">1</span>_.back()));</div><div class=\"line\">        <span class=\"number\">1</span>_.pop_back();</div><div class=\"line\">        <span class=\"keyword\">return</span> l_.front();</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">(<span class=\"keyword\">const</span> F&amp; fu)</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_ )</span></span>;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i = l_.begin(); i != l_.end(); ++i) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (fu == *i) &#123;</div><div class=\"line\">                l_.erase(i);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样实现的优点很明显，不会暴露细节（iter）。<br>在get的时候，我们做了1次rotate，把list的back对象move到了front，并同时返回这个新front对象；<br>当上层remove这个对象的时候，因为是从begin开始的，这样就极大提升了找到的命中率。<br>当然这个性能提升也不是完美的，可以想象：</p>\n<ul>\n<li>当上层单线程调用get/remove时，或者多线程，但是push的频率足够慢（慢于get —&gt; remove的时间）时，remove的性能等价于o(1）;</li>\n<li>但当上层多线程且push频率较高时，remove性能仍然趋向o(n)；</li>\n</ul>\n<h2 id=\"综合来看\"><a href=\"#综合来看\" class=\"headerlink\" title=\"综合来看\"></a>综合来看</h2><h3 id=\"IterQueue：\"><a href=\"#IterQueue：\" class=\"headerlink\" title=\"IterQueue：\"></a>IterQueue：</h3><ul>\n<li>更适合把实现嵌到上层代码中，这样iter可以作为上层对象的私有成员访问。</li>\n<li>其次上层应用可以根据实际是否会存在多线程并发iter，进一步优化代码，做好保护。</li>\n</ul>\n<h3 id=\"RotateQueue\"><a href=\"#RotateQueue\" class=\"headerlink\" title=\"RotateQueue\"></a>RotateQueue</h3><ul>\n<li>可以独立为1个管理对象，同时在push频率显著低于 <code>get -&gt; remove</code>时具有接近于IterQueue的性能。</li>\n<li>但是对上层传入的对象有约束。要求对象的value不能相同，否则存在误删除问题。</li>\n</ul>\n<pre class=\"mermaid\">sequenceDiagram\nThread1->>RotateQueue: get obj(value = 0x7fxxxxxx)\nThread2->>RotateQueue: get obj(value = 0x7fxxxxxx)\nThread1->>RotateQueue: remove obj(value = 0x7fxxxxxx)\nThread1->>RotateQueue: push new obj(value = 0x7fxxxxxx)\nThread2-->>RotateQueue: remove obj(value = 0x7fxxxxxx)\nNote left of Thread2 : the new pushed obj is unexpected removed!</pre>\n","excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>记得很早之前学习c++11 API的时候，遇到过1个接口<a href=\"https://zh.cppreference.com/w/cpp/algorithm/rotate\">std::rotate</a>，当时不太能理解为什么要把容器整体移动一位，总觉得这种接口没有什么实际价值（事实上这个接口实现太通用，做了o(n)的移动操作，导致可用性降低）。</p>\n<p>最近在工作中遇到个任务队列设计，要求从队列中取出任务对象，但是不要立即清除该对象在队列中的位置。由上层业务决定（上层会判断该任务是否需要等待，如果不等待才需要清除，否则仍旧保留在队列中。</p>\n<p>综合一下诉求如下：</p>\n<ol>\n<li>提供获取任务的get接口，但是不立即从队列中清除；</li>\n<li>每次调用get接口都能获取下一个任务；</li>\n<li>上层执行任务后判断是否需要remove任务；</li>\n<li>上述操作性能不能太差；</li>\n</ol>\n<h2 id=\"第一印象：\"><a href=\"#第一印象：\" class=\"headerlink\" title=\"第一印象：\"></a>第一印象：</h2><p>这里不区分deque、list等容器的差异，线性容器统一使用list讨论设计方案。</p>\n<p>第一反应，能想到的就是使用list，或者unoredered_map。<br>但为了追求高性能同时不想扩大存储内存，因而选择利用list的iterator，因为iter在新增、删除非本iter时不会失效。为了简单，我们让代码中的get接口直接返回iter（这里是为了示例，不对iter做封装）。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Lock = <span class=\"built_in\">std</span>::lock_guard&lt;<span class=\"built_in\">std</span>::mutex&gt;;</div><div class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> F&gt; <span class=\"keyword\">class</span> IterQueue &#123;</div><div class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt; l_ ;</div><div class=\"line\">    <span class=\"built_in\">std</span>::mutex mtx_ ;</div><div class=\"line\">    <span class=\"keyword\">typename</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt;::iterator pos;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">    IterQueue():pos(<span class=\"number\">1</span>_.end())&#123;&#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(F&amp;&amp; fu)</span> </span>&#123; <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_)</span></span>; <span class=\"number\">1</span>_.empLace_back(<span class=\"built_in\">std</span>::forward&lt;F&gt;(fu)); &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">typename</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt;::<span class=\"function\">iterator <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_)</span></span>;</div><div class=\"line\">        <span class=\"comment\">/*省略1_为空场景处理*/</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (pos == <span class=\"number\">1</span>_.end()) &#123;</div><div class=\"line\">            pos = <span class=\"number\">1</span>_.begin();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> pos++;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">( <span class=\"keyword\">typename</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt;::iterator it)</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_)</span></span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (pos == it) pos = <span class=\"number\">1</span>_.erase(it);</div><div class=\"line\">        <span class=\"keyword\">else</span> <span class=\"number\">1</span>_.erase(it);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这种方案的优点很明显，返回iter，如果上层要删除，传回iter，erase的性能是o(1)的。<br>其缺点同样也是显而易见：</p>\n<ul>\n<li>iter对外暴露（虽然可以进一步封装掉，也只是暴露的程度有别）;</li>\n<li>同时对多线程的并发操作有约束，不能并发erase，否则可能会导致其它线程获取的iter失效。<strong>这里之所以是可能，因为其它线程持有的iter不是erase的那个就不会失效</strong>；</li>\n</ul>\n<h2 id=\"再想一想\"><a href=\"#再想一想\" class=\"headerlink\" title=\"再想一想\"></a>再想一想</h2><p>上述方案使用iter其实有2个原因：</p>\n<ul>\n<li>变更pos_，使得每次get都能获取到下一个；</li>\n<li>remove时不需要遍历，性能o(1)；</li>\n</ul>\n<p>针对这2个因素，同样也可以考虑利用rotate特性来实现，源码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Lock = <span class=\"built_in\">std</span>::lock_guard&lt;<span class=\"built_in\">std</span>::mutex&gt;;</div><div class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> F&gt; <span class=\"keyword\">class</span> RotateQueue &#123;</div><div class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">list</span>&lt;F&gt; l_ ;</div><div class=\"line\">    <span class=\"built_in\">std</span>::mutex mtx_ ;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(F&amp;&amp; fu)</span> </span>&#123; <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_)</span></span>; <span class=\"number\">1</span>_.emplace_front( <span class=\"built_in\">std</span>::forward&lt;F&gt;(fu)); &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\">F <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_ )</span></span>;</div><div class=\"line\">        <span class=\"number\">1</span>_.empLace_front(<span class=\"built_in\">std</span>::move(<span class=\"number\">1</span>_.back()));</div><div class=\"line\">        <span class=\"number\">1</span>_.pop_back();</div><div class=\"line\">        <span class=\"keyword\">return</span> l_.front();</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">(<span class=\"keyword\">const</span> F&amp; fu)</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\">Lock <span class=\"title\">Lock</span><span class=\"params\">(mtx_ )</span></span>;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> i = l_.begin(); i != l_.end(); ++i) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (fu == *i) &#123;</div><div class=\"line\">                l_.erase(i);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样实现的优点很明显，不会暴露细节（iter）。<br>在get的时候，我们做了1次rotate，把list的back对象move到了front，并同时返回这个新front对象；<br>当上层remove这个对象的时候，因为是从begin开始的，这样就极大提升了找到的命中率。<br>当然这个性能提升也不是完美的，可以想象：</p>\n<ul>\n<li>当上层单线程调用get/remove时，或者多线程，但是push的频率足够慢（慢于get —&gt; remove的时间）时，remove的性能等价于o(1）;</li>\n<li>但当上层多线程且push频率较高时，remove性能仍然趋向o(n)；</li>\n</ul>\n<h2 id=\"综合来看\"><a href=\"#综合来看\" class=\"headerlink\" title=\"综合来看\"></a>综合来看</h2><h3 id=\"IterQueue：\"><a href=\"#IterQueue：\" class=\"headerlink\" title=\"IterQueue：\"></a>IterQueue：</h3><ul>\n<li>更适合把实现嵌到上层代码中，这样iter可以作为上层对象的私有成员访问。</li>\n<li>其次上层应用可以根据实际是否会存在多线程并发iter，进一步优化代码，做好保护。</li>\n</ul>\n<h3 id=\"RotateQueue\"><a href=\"#RotateQueue\" class=\"headerlink\" title=\"RotateQueue\"></a>RotateQueue</h3><ul>\n<li>可以独立为1个管理对象，同时在push频率显著低于 <code>get -&gt; remove</code>时具有接近于IterQueue的性能。</li>\n<li>但是对上层传入的对象有约束。要求对象的value不能相同，否则存在误删除问题。</li>\n</ul>\n<pre class=\"mermaid\">sequenceDiagram\nThread1->>RotateQueue: get obj(value = 0x7fxxxxxx)\nThread2->>RotateQueue: get obj(value = 0x7fxxxxxx)\nThread1->>RotateQueue: remove obj(value = 0x7fxxxxxx)\nThread1->>RotateQueue: push new obj(value = 0x7fxxxxxx)\nThread2-->>RotateQueue: remove obj(value = 0x7fxxxxxx)\nNote left of Thread2 : the new pushed obj is unexpected removed!</pre>\n"}],"PostAsset":[{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-10.jpg","slug":"20120211-10.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-12.jpg","slug":"20120211-12.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-13.jpg","slug":"20120211-13.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-9.jpg","slug":"20120211-9.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20111203-办公室养龟/20111203-4.jpg","slug":"20111203-4.jpg","post":"cjqzgkwb00000nnwvdvgbb9gp","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-11.jpg","slug":"20120211-11.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-5.jpg","slug":"20120211-5.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-7.jpg","slug":"20120211-7.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20111203-办公室养龟/20111203-3.jpg","slug":"20111203-3.jpg","post":"cjqzgkwb00000nnwvdvgbb9gp","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-4.jpg","slug":"20120211-4.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-6.jpg","slug":"20120211-6.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-8.jpg","slug":"20120211-8.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","modified":1,"renderable":0},{"_id":"source/_posts/Balance-Router-Algorithm-in-High-Concurrency/2boxes.png","post":"cjqzgkwb80002nnwvjik02u4t","slug":"2boxes.png","modified":1,"renderable":1},{"_id":"source/_posts/Balance-Router-Algorithm-in-High-Concurrency/boxer_router2.png","slug":"boxer_router2.png","post":"cjqzgkwb80002nnwvjik02u4t","modified":1,"renderable":0},{"_id":"source/_posts/Balance-Router-Algorithm-in-High-Concurrency/standardmodel.png","post":"cjqzgkwb80002nnwvjik02u4t","slug":"standardmodel.png","modified":1,"renderable":1},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-1.jpg","post":"cjqzgkwbs0007nnwvsps8ky06","slug":"20120813-1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-2.jpg","post":"cjqzgkwbs0007nnwvsps8ky06","slug":"20120813-2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-3.jpg","post":"cjqzgkwbs0007nnwvsps8ky06","slug":"20120813-3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-4.jpg","post":"cjqzgkwbs0007nnwvsps8ky06","slug":"20120813-4.jpg","modified":1,"renderable":1},{"_id":"source/_posts/20120813-今天兴起测了测养龟的水质/20120813-5.jpg","post":"cjqzgkwbs0007nnwvsps8ky06","slug":"20120813-5.jpg","modified":1,"renderable":1},{"_id":"source/_posts/20111203-办公室养龟/20111203-1.jpg","slug":"20111203-1.jpg","post":"cjqzgkwb00000nnwvdvgbb9gp","modified":1,"renderable":0},{"_id":"source/_posts/20111203-办公室养龟/20111203-2.jpg","slug":"20111203-2.jpg","post":"cjqzgkwb00000nnwvdvgbb9gp","modified":1,"renderable":0},{"_id":"source/_posts/20111203-办公室养龟/20111203-5.jpg","slug":"20111203-5.jpg","post":"cjqzgkwb00000nnwvdvgbb9gp","modified":1,"renderable":0},{"_id":"source/_posts/20111203-办公室养龟/20111203-6.jpg","slug":"20111203-6.jpg","post":"cjqzgkwb00000nnwvdvgbb9gp","modified":1,"renderable":0},{"_id":"source/_posts/20111203-办公室养龟/20111203-7.jpg","slug":"20111203-7.jpg","post":"cjqzgkwb00000nnwvdvgbb9gp","modified":1,"renderable":0},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-1.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","slug":"20120211-1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-2.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","slug":"20120211-2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/20120211-国外龟缸的简单设计/20120211-3.jpg","post":"cjqzgkwbn0006nnwvlfmmfg37","slug":"20120211-3.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjqzgkwbs0007nnwvsps8ky06","category_id":"cjqzgkwbf0004nnwv93a29m3i","_id":"cjqzgkwc5000cnnwv4fvy6uvs"},{"post_id":"cjqzgkwb00000nnwvdvgbb9gp","category_id":"cjqzgkwbf0004nnwv93a29m3i","_id":"cjqzgkwcc000gnnwvxe1e90o3"},{"post_id":"cjqzgkwb80002nnwvjik02u4t","category_id":"cjqzgkwc00009nnwv2sryqn1p","_id":"cjqzgkwcd000hnnwv3jey2uyc"},{"post_id":"cjqzgkwbn0006nnwvlfmmfg37","category_id":"cjqzgkwbf0004nnwv93a29m3i","_id":"cjqzgkwcq000knnwviwwrcuj9"},{"post_id":"cjqzgkwbw0008nnwvwp3mnzr5","category_id":"cjqzgkwc00009nnwv2sryqn1p","_id":"cjqzgkwd7000mnnwvbww9t0a2"}],"PostTag":[{"post_id":"cjqzgkwbs0007nnwvsps8ky06","tag_id":"cjqzgkwbm0005nnwvj07y6vv9","_id":"cjqzgkwc2000bnnwvac16g68c"},{"post_id":"cjqzgkwb00000nnwvdvgbb9gp","tag_id":"cjqzgkwbm0005nnwvj07y6vv9","_id":"cjqzgkwc6000dnnwvj7lk4r5v"},{"post_id":"cjqzgkwbn0006nnwvlfmmfg37","tag_id":"cjqzgkwc1000annwvvpuoffn9","_id":"cjqzgkwcf000jnnwvld6nuq27"},{"post_id":"cjqzgkwbn0006nnwvlfmmfg37","tag_id":"cjqzgkwbm0005nnwvj07y6vv9","_id":"cjqzgkwcq000lnnwvpek003vz"}],"Tag":[{"name":"龟龟","_id":"cjqzgkwbm0005nnwvj07y6vv9"},{"name":"造景","_id":"cjqzgkwc1000annwvvpuoffn9"}]}}